{ "X3D": {
    "encoding":"UTF-8",
    "@profile":"Immersive",
    "@version":"3.3",
    "@xsd:noNamespaceSchemaLocation":"http://www.web3d.org/specifications/x3d-3.3.xsd",
    "JSON schema":"http://www.web3d.org/specifications/x3d-3.3-JSONSchema.json",
    "head": {
        "meta": [
          {
            "@name":"title",
            "@content":"Cut.x3d"
          },
          {
            "@name":"description",
            "@content":"Cutting plane parts: this file contains two prototype declarations used in creating a cutting plane. The example scene TexturePlane uses these for external prototype instances and creates a plane with one of a set of textures mapped to it. The texture choice is controlled by a fraction eventIn. SlidingPlane creates a texture plane that slides back and forth along the X axis, changing the texture based upon the X position."
          },
          {
            "@name":"creator",
            "@content":"David R. Nadeau"
          },
          {
            "@name":"translator",
            "@content":"Don Brutzman"
          },
          {
            "@name":"created",
            "@content":"1 July 1998"
          },
          {
            "@name":"translated",
            "@content":"2 February 2014"
          },
          {
            "@name":"modified",
            "@content":"9 February 2014"
          },
          {
            "@name":"reference",
            "@content":"CutPlane.x3d"
          },
          {
            "@name":"reference",
            "@content":"TexturePlane.x3d"
          },
          {
            "@name":"reference",
            "@content":"originals/cut.wrl"
          },
          {
            "@name":"reference",
            "@content":"http://www.siggraph.org/s98"
          },
          {
            "@name":"reference",
            "@content":"http://www.siggraph.org/s98/conference/courses/18.html"
          },
          {
            "@name":"reference",
            "@content":"http://www.sdsc.edu/~moreland/courses/Siggraph98/vrml97/slides/mt0497.htm"
          },
          {
            "@name":"reference",
            "@content":"http://www.sdsc.edu/~moreland/courses/Siggraph98/vrml97/vrml97.htm"
          },
          {
            "@name":"reference",
            "@content":"http://www.web3d.org/x3d/content/examples/X3dResources.html"
          },
          {
            "@name":"identifier",
            "@content":"http://www.web3d.org/x3d/content/examples/Vrml2Sourcebook/Siggraph98Course/Cut.x3d"
          },
          {
            "@name":"generator",
            "@content":"Vrml97ToX3dNist, http://ovrt.nist.gov/v2_x3d.html"
          },
          {
            "@name":"generator",
            "@content":"X3D-Edit, https://savage.nps.edu/X3D-Edit"
          },
          {
            "@name":"license",
            "@content":"../license.html"
          },
          {
            "@name":"translated",
            "@content":"19 March 2017"
          },
          {
            "@name":"generator",
            "@content":"X3dToJson.xslt, http://www.web3d.org/x3d/stylesheets/X3dToJson.html"
          },
          {
            "@name":"warning",
            "@content":"An experimental version of X3D JSON encoding is used for this scene.  Status online at http://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
          }
        ]
    },
    "Scene": {
        "-children":[
          { "WorldInfo":
            {
              "@info":["Copyright (c) 1997, David R. Nadeau"],
              "@title":"Cutting Plane parts"
            }
          },
          { "ProtoDeclare":
            {
              "@name":"TexturePlane",
              "ProtoInterface": {
                  "field": [
                    {
                      "@name":"textures",
                      "@accessType":"initializeOnly",
                      "@type":"MFNode",
                      "-children":[
                        {
                          "#comment":"initialized with ImageTexture nodes upon use"
                        }
                      ]
                    },
                    {
                      "@name":"set_fraction",
                      "@accessType":"inputOnly",
                      "@type":"SFFloat"
                    }
                  ]
              },
              "ProtoBody": {
                  "-children":[
                    { "Group":
                      {
                        "-children":[
                          { "Shape":
                            {
                              "-appearance":
                                { "Appearance":
                                  {
                                    "@DEF":"App"
                                  }
                                },
                              "-geometry":
                                { "IndexedFaceSet":
                                  {
                                    "@coordIndex":[0,1,2,3],
                                    "@solid":false,
                                    "@texCoordIndex":[0,1,2,3],
                                    "-texCoord":
                                      { "TextureCoordinate":
                                        {
                                          "@point":[0.0,0.0,1.0,0.0,1.0,1.0,0.0,1.0]
                                        }
                                      },
                                    "-coord":
                                      { "Coordinate":
                                        {
                                          "@point":[-1.0,-1.0,0.0,1.0,-1.0,0.0,1.0,1.0,0.0,-1.0,1.0,0.0]
                                        }
                                      }
                                  }
                                }
                            }
                          },
                          { "Shape":
                            {
                              "-appearance":
                                { "Appearance":
                                  {
                                  }
                                },
                              "-geometry":
                                { "IndexedLineSet":
                                  {
                                    "@coordIndex":[0,1,2,3,0],
                                    "-coord":
                                      { "Coordinate":
                                        {
                                          "@point":[-1.0,-1.0,0.0,1.0,-1.0,0.0,1.0,1.0,0.0,-1.0,1.0,0.0]
                                        }
                                      }
                                  }
                                }
                            }
                          }
                        ]
                      }
                    },
                    { "Script":
                      {
                        "@DEF":"Selector",
                        "@directOutput":true,
                        "field": [
                          {
                            "@name":"textures",
                            "@accessType":"initializeOnly",
                            "@type":"MFNode"
                          },
                          {
                            "@name":"texture_changed",
                            "@accessType":"outputOnly",
                            "@type":"SFNode"
                          },
                          {
                            "@name":"set_fraction",
                            "@accessType":"inputOnly",
                            "@type":"SFFloat"
                          }
                        ],
                        "IS": {
                            "connect": [
                              {
                                "@nodeField":"textures",
                                "@protoField":"textures"
                              },
                              {
                                "@nodeField":"set_fraction",
                                "@protoField":"set_fraction"
                              }
                            ]
                        },
                        "#sourceText":[
"ecmascript:",
"    function initialize( ) {",
"        texture_changed = textures[0];",
"        Browser.println ('[Cut Selector] initialize(): textures.length=' + textures.length); // debug",
"    }",
"    function set_fraction( f, tm ) {",
"        i = Math.floor(f * 10);",
"        if ( i == 10 ) { i = 9; }",
"        Browser.println ('[Cut Selector] set_fraction(): i=' + i); // debug",
"        texture_changed = textures[i];",
"    }"
]
                      }
                    },
                    { "ROUTE":
                      {
                        "@fromField":"texture_changed",
                        "@fromNode":"Selector",
                        "@toField":"set_texture",
                        "@toNode":"App"
                      }
                    }
                  ]
              }
            }
          },
          { "ProtoDeclare":
            {
              "@name":"SlidingPlane",
              "ProtoInterface": {
                  "field": [
                    {
                      "@name":"textures",
                      "@accessType":"initializeOnly",
                      "@type":"MFNode",
                      "-children":[
                        {
                          "#comment":"initialized with ImageTexture nodes upon use"
                        }
                      ]
                    },
                    {
                      "@name":"minMaxX",
                      "@accessType":"initializeOnly",
                      "@type":"SFVec2f",
                      "@value":[0.0,1.0]
                    },
                    {
                      "@name":"initialX",
                      "@accessType":"initializeOnly",
                      "@type":"SFFloat",
                      "@value":0.0
                    }
                  ]
              },
              "ProtoBody": {
                  "-children":[
                    { "Transform":
                      {
                        "@rotation":[0.0,1.0,0.0,1.571],
                        "-children":[
                          { "PlaneSensor":
                            {
                              "@DEF":"Slider",
                              "@description":"drag to see cross-section slices"
                            }
                          },
                          { "Transform":
                            {
                              "@DEF":"PlanePosition",
                              "@rotation":[0.0,1.0,0.0,-1.571],
                              "-children":[
                                { "ProtoInstance":
                                  {
                                    "@name":"TexturePlane",
                                    "@DEF":"Plane",
                                    "IS": {
                                        "connect": [
                                          {
                                            "@nodeField":"textures",
                                            "@protoField":"textures"
                                          }
                                        ]
                                    }
                                  }
                                },
                                { "Transform":
                                  {
                                    "@rotation":[0.0,1.0,0.0,1.571],
                                    "@translation":[1.05,-1.2,0.0],
                                    "-children":[
                                      { "Shape":
                                        {
                                          "-appearance":
                                            { "Appearance":
                                              {
                                              }
                                            },
                                          "-geometry":
                                            { "Text":
                                              {
                                                "@DEF":"Label",
                                                "@string":[""],
                                                "-fontStyle":
                                                  { "FontStyle":
                                                    {
                                                      "@justify":["MIDDLE","MIDDLE"],
                                                      "@size":0.3,
                                                      "@style":"BOLD"
                                                    }
                                                  }
                                              }
                                            }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    { "Script":
                      {
                        "@DEF":"Translator",
                        "field": [
                          {
                            "@name":"set_translation",
                            "@accessType":"inputOnly",
                            "@type":"SFVec3f"
                          },
                          {
                            "@name":"minMaxX",
                            "@accessType":"initializeOnly",
                            "@type":"SFVec2f"
                          },
                          {
                            "@name":"minPosition_changed",
                            "@accessType":"outputOnly",
                            "@type":"SFVec2f"
                          },
                          {
                            "@name":"fraction_changed",
                            "@accessType":"outputOnly",
                            "@type":"SFFloat"
                          },
                          {
                            "@name":"initialX",
                            "@accessType":"initializeOnly",
                            "@type":"SFFloat"
                          },
                          {
                            "@name":"offset_changed",
                            "@accessType":"outputOnly",
                            "@type":"SFVec3f"
                          },
                          {
                            "@name":"maxPosition_changed",
                            "@accessType":"outputOnly",
                            "@type":"SFVec2f"
                          },
                          {
                            "@name":"label_changed",
                            "@accessType":"outputOnly",
                            "@type":"MFString"
                          }
                        ],
                        "IS": {
                            "connect": [
                              {
                                "@nodeField":"minMaxX",
                                "@protoField":"minMaxX"
                              },
                              {
                                "@nodeField":"initialX",
                                "@protoField":"initialX"
                              }
                            ]
                        },
                        "#sourceText":[
"ecmascript:",
"        function translate( x ) {",
"        // compute the fraction using the given X position",
"            f = (x-minMaxX[0]) / (minMaxX[1] - minMaxX[0]);",
"        // send a fraction event",
"            fraction_changed = f;",
"        // send a new label string with 1 digit after decimal",
"            label_changed[0] = Math.floor(f*10.0)/10.0;",
"        }",
"",
"        function initialize( ) {",
"        // set the plane sensor bounds",
"            minPosition_changed[0] = minMaxX[0];",
"            minPosition_changed[1] = 0.0;",
"            maxPosition_changed[0] = minMaxX[1];",
"            maxPosition_changed[1] = 0.0;",
"        // set the plane sensor initial position",
"            offset_changed[0] = initialX;",
"            offset_changed[1] = 0.0;",
"            offset_changed[2] = 0.0;",
"        // compute the initial values",
"            translate( initialX );",
"        }",
"",
"        function set_translation( t, tm ) {",
"        // compute the new values",
"            translate( t[0] );",
"        }"
]
                      }
                    },
                    { "ROUTE":
                      {
                        "@fromField":"translation_changed",
                        "@fromNode":"Slider",
                        "@toField":"set_translation",
                        "@toNode":"PlanePosition"
                      }
                    },
                    { "ROUTE":
                      {
                        "@fromField":"translation_changed",
                        "@fromNode":"Slider",
                        "@toField":"set_translation",
                        "@toNode":"Translator"
                      }
                    },
                    { "ROUTE":
                      {
                        "@fromField":"fraction_changed",
                        "@fromNode":"Translator",
                        "@toField":"set_fraction",
                        "@toNode":"Plane"
                      }
                    },
                    { "ROUTE":
                      {
                        "@fromField":"label_changed",
                        "@fromNode":"Translator",
                        "@toField":"set_string",
                        "@toNode":"Label"
                      }
                    },
                    { "ROUTE":
                      {
                        "@fromField":"minPosition_changed",
                        "@fromNode":"Translator",
                        "@toField":"set_minPosition",
                        "@toNode":"Slider"
                      }
                    },
                    { "ROUTE":
                      {
                        "@fromField":"maxPosition_changed",
                        "@fromNode":"Translator",
                        "@toField":"set_maxPosition",
                        "@toNode":"Slider"
                      }
                    },
                    { "ROUTE":
                      {
                        "@fromField":"offset_changed",
                        "@fromNode":"Translator",
                        "@toField":"set_offset",
                        "@toNode":"Slider"
                      }
                    },
                    { "ROUTE":
                      {
                        "@fromField":"offset_changed",
                        "@fromNode":"Translator",
                        "@toField":"set_translation",
                        "@toNode":"PlanePosition"
                      }
                    }
                  ]
              }
            }
          },
          {
            "#comment":"Display scene instructions for viewing an example scene with a corresponding prototype instance"
          },
          { "Background":
            {
              "@skyColor":[0,0.333333,0.66667]
            }
          },
          { "Transform":
            {
              "@translation":[0,2.5,0],
              "-children":[
                { "Anchor":
                  {
                    "@description":"select text to view parent scene",
                    "@url":["CutPlane.x3d","http://www.web3d.org/x3d/content/examples/Vrml2Sourcebook/Siggraph98Course/CutPlane.x3d","CutPlane.wrl","http://www.web3d.org/x3d/content/examples/Vrml2Sourcebook/Siggraph98Course/CutPlane.wrl"],
                    "-children":[
                      { "Shape":
                        {
                          "-geometry":
                            { "Text":
                              {
                                "@string":["The Cut.x3d scene holds","prototype declarations","Select this text to view example usage","in CutPlane.x3d scene"],
                                "-fontStyle":
                                  { "FontStyle":
                                    {
                                      "@justify":["MIDDLE","MIDDLE"],
                                      "@style":"BOLD"
                                    }
                                  }
                              }
                            },
                          "-appearance":
                            { "Appearance":
                              {
                                "-material":
                                  { "Material":
                                    {
                                      "@diffuseColor":[1,0.9,0.4]
                                    }
                                  }
                              }
                            }
                        }
                      },
                      {
                        "#comment":"Invisible box behind text makes selection easier"
                      },
                      { "Shape":
                        {
                          "-geometry":
                            { "Box":
                              {
                                "@size":[12,5,0.1]
                              }
                            },
                          "-appearance":
                            { "Appearance":
                              {
                                "-material":
                                  { "Material":
                                    {
                                      "@transparency":1
                                    }
                                  }
                              }
                            }
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          { "Transform":
            {
              "@translation":[0,-2.5,0],
              "-children":[
                { "Anchor":
                  {
                    "@description":"select text to view parent scene",
                    "@url":["TexturePlane.x3d","http://www.web3d.org/x3d/content/examples/Vrml2Sourcebook/Siggraph98Course/TexturePlane.x3d","TexturePlane.wrl","http://www.web3d.org/x3d/content/examples/Vrml2Sourcebook/Siggraph98Course/TexturePlane.wrl"],
                    "-children":[
                      { "Shape":
                        {
                          "-geometry":
                            { "Text":
                              {
                                "@string":["or select this text to view example usage","in TexturePlane.x3d scene"],
                                "-fontStyle":
                                  { "FontStyle":
                                    {
                                      "@justify":["MIDDLE","MIDDLE"],
                                      "@style":"BOLD"
                                    }
                                  }
                              }
                            },
                          "-appearance":
                            { "Appearance":
                              {
                                "-material":
                                  { "Material":
                                    {
                                      "@diffuseColor":[1,0.9,0.4]
                                    }
                                  }
                              }
                            }
                        }
                      },
                      {
                        "#comment":"Invisible box behind text makes selection easier"
                      },
                      { "Shape":
                        {
                          "-geometry":
                            { "Box":
                              {
                                "@size":[12,5,0.1]
                              }
                            },
                          "-appearance":
                            { "Appearance":
                              {
                                "-material":
                                  { "Material":
                                    {
                                      "@transparency":1
                                    }
                                  }
                              }
                            }
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        ]
    }
  }
}