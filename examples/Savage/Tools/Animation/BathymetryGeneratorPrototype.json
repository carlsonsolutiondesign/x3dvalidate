{ "X3D": {
    "encoding":"UTF-8",
    "@profile":"Immersive",
    "@version":"3.0",
    "@xsd:noNamespaceSchemaLocation":"http://www.web3d.org/specifications/x3d-3.0.xsd",
    "JSON schema":"http://www.web3d.org/specifications/x3d-3.3-JSONSchema.json",
    "head": {
        "meta": [
          {
            "@name":"title",
            "@content":"BathymetryGeneratorPrototype.x3d"
          },
          {
            "@name":"description",
            "@content":"This prototype generates bathymetry based on the input data using IndexedFaceSet."
          },
          {
            "@name":"creator",
            "@content":"Don Brutzman, Jane Wu"
          },
          {
            "@name":"created",
            "@content":"8 February 2002"
          },
          {
            "@name":"modified",
            "@content":"14 January 2014"
          },
          {
            "@name":"subject",
            "@content":"bathymetry"
          },
          {
            "@name":"identifier",
            "@content":"https://savage.nps.edu/Savage/Tools/Animation/BathymetryGeneratorPrototype.x3d"
          },
          {
            "@name":"generator",
            "@content":"X3D-Edit 3.2, https://savage.nps.edu/X3D-Edit"
          },
          {
            "@name":"license",
            "@content":"../../license.html"
          },
          {
            "@name":"translated",
            "@content":"19 March 2017"
          },
          {
            "@name":"generator",
            "@content":"X3dToJson.xslt, http://www.web3d.org/x3d/stylesheets/X3dToJson.html"
          },
          {
            "@name":"warning",
            "@content":"An experimental version of X3D JSON encoding is used for this scene.  Status online at http://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
          }
        ]
    },
    "Scene": {
        "-children":[
          { "ProtoDeclare":
            {
              "@name":"BathymetryGenerator",
              "@appinfo":"BathymetryGenerator creates bottom topography",
              "ProtoInterface": {
                  "field": [
                    {
                      "@name":"positionArray",
                      "@accessType":"initializeOnly",
                      "@type":"MFVec3f",
                      "@value":[0.0,0,0,10,-4,0,25,-6,0,30,-8,5,38,-15,5,45,-18,5,55,-22,5,60,-25,15,60,-27,22,55,-30,35,48,-35,35,35,-35,35,25,-45,35,20,-55,35,15,-70,35,3,-70,35,-5,-72,40,-5,-75,50,0,-80,55,15,-75,55,30,-70,55,35,-60,55,40,-50,55,50,-34,55,65,-23,70]
                    },
                    {
                      "@name":"colorSchemeDepthRangeArray",
                      "@accessType":"initializeOnly",
                      "@type":"MFVec2f",
                      "@value":[0,-10,-10,-20,-20,-30,-30,-40,-40,-50,-50,-60,-60,-70,-70,-999999]
                    },
                    {
                      "@name":"colorSchemeColorArray",
                      "@accessType":"initializeOnly",
                      "@type":"MFColor",
                      "@value":[1,1,0.2,0.6,1,1,0,1,1,0.2,0.6,0.2,1,0,1,0.56,0,0.32,0.2,0.3,0.7,0,0,1]
                    },
                    {
                      "@name":"beamWidth",
                      "@accessType":"initializeOnly",
                      "@type":"SFFloat",
                      "@value":2
                    },
                    {
                      "@name":"traceEnabled",
                      "@accessType":"initializeOnly",
                      "@type":"SFBool",
                      "@value":false
                    }
                  ]
              },
              "ProtoBody": {
                  "-children":[
                    { "Group":
                      {
                        "-children":[
                          { "Transform":
                            {
                              "@DEF":"Bathymetry",
                              "-children":[
                                { "Shape":
                                  {
                                    "-geometry":
                                      { "IndexedFaceSet":
                                        {
                                          "@DEF":"BathymetryFaceSet",
                                          "@ccw":false,
                                          "-color":
                                            { "Color":
                                              {
                                                "@DEF":"BathymetryFaceColor"
                                              }
                                            },
                                          "-coord":
                                            { "Coordinate":
                                              {
                                                "@DEF":"BathymetryFaceCoord"
                                              }
                                            }
                                        }
                                      }
                                  }
                                },
                                { "Script":
                                  {
                                    "@DEF":"BathymetryScript",
                                    "field": [
                                      {
                                        "@name":"positionArray",
                                        "@accessType":"initializeOnly",
                                        "@type":"MFVec3f"
                                      },
                                      {
                                        "@name":"depthRangeArray",
                                        "@accessType":"initializeOnly",
                                        "@type":"MFVec2f"
                                      },
                                      {
                                        "@name":"depthColorArray",
                                        "@accessType":"initializeOnly",
                                        "@type":"MFColor"
                                      },
                                      {
                                        "@name":"beamWidth",
                                        "@accessType":"initializeOnly",
                                        "@type":"SFFloat"
                                      },
                                      {
                                        "@name":"bathyFaceCoordPoints",
                                        "@accessType":"outputOnly",
                                        "@type":"MFVec3f"
                                      },
                                      {
                                        "@name":"bathyCoordIndex",
                                        "@accessType":"outputOnly",
                                        "@type":"MFInt32"
                                      },
                                      {
                                        "@name":"bathyFaceColorArray",
                                        "@accessType":"outputOnly",
                                        "@type":"MFColor"
                                      },
                                      {
                                        "@name":"bathyColorIndex",
                                        "@accessType":"outputOnly",
                                        "@type":"MFInt32"
                                      },
                                      {
                                        "@name":"traceEnabled",
                                        "@accessType":"initializeOnly",
                                        "@type":"SFBool"
                                      },
                                      {
                                        "@name":"dataValid",
                                        "@accessType":"initializeOnly",
                                        "@appinfo":"local variable",
                                        "@type":"SFBool",
                                        "@value":false
                                      },
                                      {
                                        "@name":"color",
                                        "@accessType":"initializeOnly",
                                        "@appinfo":"local variable",
                                        "@type":"SFColor",
                                        "@value":[1,1,1]
                                      },
                                      {
                                        "@name":"leftPoint",
                                        "@accessType":"initializeOnly",
                                        "@appinfo":"local variable",
                                        "@type":"SFVec3f",
                                        "@value":[0,0,0]
                                      },
                                      {
                                        "@name":"rightPoint",
                                        "@accessType":"initializeOnly",
                                        "@appinfo":"local variable",
                                        "@type":"SFVec3f",
                                        "@value":[0,0,0]
                                      }
                                    ],
                                    "IS": {
                                        "connect": [
                                          {
                                            "@nodeField":"positionArray",
                                            "@protoField":"positionArray"
                                          },
                                          {
                                            "@nodeField":"depthRangeArray",
                                            "@protoField":"colorSchemeDepthRangeArray"
                                          },
                                          {
                                            "@nodeField":"depthColorArray",
                                            "@protoField":"colorSchemeColorArray"
                                          },
                                          {
                                            "@nodeField":"beamWidth",
                                            "@protoField":"beamWidth"
                                          },
                                          {
                                            "@nodeField":"traceEnabled",
                                            "@protoField":"traceEnabled"
                                          }
                                        ]
                                    },
                                    "#sourceText":[
"ecmascript:",
"",
"function initialize()",
"{",
"\tdataValid = true;",
"\tcheckDataValidity();",
"\tif (!dataValid)",
"\t\treturn;",
"",
"\ttracePrint('positionArray.length = ' + positionArray.length);",
"",
"\tcoordIndex = 0;",
"\tcolorIndex = 0;",
"\tfor (i = 0; i < positionArray.length; i++)",
"\t{",
"\t\t//determine the color for every position",
"\t\tdetermineFaceColor(positionArray[i].y)",
"\t\tbathyFaceColorArray[colorIndex++] = color;",
"",
"\t\t//determine the 'leftPoint' for every poistion -- For the first",
"\t\t//position, use the first and second position.",
"\t\tif (i == 0)",
"\t\t{",
"\t\t\tdetermineLeftPoint(positionArray[0], positionArray[1]);",
"\t\t\tbathyFaceCoordPoints[coordIndex++] = leftPoint;",
"\t\t\tdetermineRightPoint(positionArray[0], positionArray[1]);",
"\t\t\tbathyFaceCoordPoints[coordIndex++] = rightPoint;",
"\t\t}",
"\t\telse",
"\t\t{",
"\t\t\tdetermineLeftPoint(positionArray[i], positionArray[i-1]);",
"\t\t\tbathyFaceCoordPoints[coordIndex++] = leftPoint;",
"\t\t\tdetermineRightPoint(positionArray[i], positionArray[i-1]);",
"\t\t\tbathyFaceCoordPoints[coordIndex++] = rightPoint;",
"\t\t}",
"\t}",
"",
"\ttracePrint('bathyFaceCoordPoints = ' + bathyFaceCoordPoints);",
"",
"\tj = 0;",
"\tfor (i = 0; i < (positionArray.length - 1); i++)",
"\t{",
"\t\tbathyCoordIndex[j++] = i * 2;",
"\t\tbathyCoordIndex[j++] = i * 2 + 1;",
"\t\tbathyCoordIndex[j++] = i * 2 + 2;",
"\t\tbathyCoordIndex[j++] = i * 2 + 3;",
"\t\tbathyCoordIndex[j++] = -1;",
"",
"\t\tbathyCoordIndex[j++] = i * 2 + 3;",
"\t\tbathyCoordIndex[j++] = i * 2 + 2;",
"\t\tbathyCoordIndex[j++] = i * 2 + 1;",
"\t\tbathyCoordIndex[j++] = i * 2;",
"\t\tbathyCoordIndex[j++] = -1;",
"\t}",
"",
"\ttracePrint('bathyCoordIndex = ' + bathyCoordIndex);",
"}",
"",
"function checkDataValidity()",
"{",
"\tif (depthRangeArray.length != depthColorArray.length)",
"\t{",
"\t\talwaysPrint('<Error> colorSchemeDepthRangeArray must be the same length as colorSchemeColorArray');",
"\t\tdataValid = false;",
"\t\treturn;",
"\t}",
"}",
"",
"function determineFaceColor(depth)",
"{",
"\tfor (j = 0; j < depthColorArray.length; j++)",
"        {",
"\t\tif (depth <= depthRangeArray[j].x && depth >= depthRangeArray[j].y)",
"\t\t{",
"\t\t\tcolor = depthColorArray[j]",
"\t\t\treturn;",
"\t\t}",
"        }",
"\tcolor = null;",
"\treturn;",
"}",
"",
"function determineLeftPoint(currPosition, prevPosition)",
"{",
"\tdeltaX = currPosition.x - prevPosition.x;",
"\tdeltaZ = currPosition.z - prevPosition.z;",
"",
"\ttheta = Math.atan2(deltaX, deltaZ);",
"\ttracePrint('theta = ' + theta);",
"",
"\tleftPoint = new SFVec3f(currPosition.x + Math.cos(theta),",
"\t                        currPosition.y,",
"\t                        currPosition.z - Math.sin(theta) * (beamWidth / 2));",
"}",
"",
"function determineRightPoint(currPosition, prevPosition)",
"{",
"\tdeltaX = currPosition.x - prevPosition.x;",
"\tdeltaZ = currPosition.z - prevPosition.z;",
"",
"\ttheta = Math.atan2(deltaX, deltaZ);",
"",
"\trightPoint = new SFVec3f(currPosition.x - Math.cos(theta),",
"\t                         currPosition.y,",
"\t                         currPosition.z + Math.sin(theta) * (beamWidth / 2));",
"}",
"",
"function alwaysPrint(string)",
"{",
"\tBrowser.print ('[BathymetryGeneratorPrototype] ' + string + '\n');",
"}",
"",
"function tracePrint(string)",
"{",
"\tif (traceEnabled)",
"\t\tBrowser.print ('[BathymetryGeneratorPrototype] ' + string + '\n');",
"}"
]
                                  }
                                },
                                { "ROUTE":
                                  {
                                    "@fromField":"bathyFaceCoordPoints",
                                    "@fromNode":"BathymetryScript",
                                    "@toField":"point",
                                    "@toNode":"BathymetryFaceCoord"
                                  }
                                },
                                { "ROUTE":
                                  {
                                    "@fromField":"bathyCoordIndex",
                                    "@fromNode":"BathymetryScript",
                                    "@toField":"set_coordIndex",
                                    "@toNode":"BathymetryFaceSet"
                                  }
                                },
                                { "ROUTE":
                                  {
                                    "@fromField":"bathyFaceColorArray",
                                    "@fromNode":"BathymetryScript",
                                    "@toField":"color",
                                    "@toNode":"BathymetryFaceColor"
                                  }
                                },
                                { "ROUTE":
                                  {
                                    "@fromField":"bathyColorIndex",
                                    "@fromNode":"BathymetryScript",
                                    "@toField":"set_colorIndex",
                                    "@toNode":"BathymetryFaceSet"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
              }
            }
          },
          {
            "#comment":"===================="
          },
          {
            "#comment":"Example scene starts here, in case this prototype is examined."
          },
          { "Anchor":
            {
              "@description":"BathymetryGeneratorExample",
              "@parameter":["target=_blank"],
              "@url":["BathymetryGeneratorExample.x3d","https://savage.nps.edu/Savage/Tools/Animation/BathymetryGeneratorExample.x3d","BathymetryGeneratorExample.wrl","https://savage.nps.edu/Savage/Tools/Animation/BathymetryGeneratorExample.wrl"],
              "-children":[
                { "Shape":
                  {
                    "-geometry":
                      { "Text":
                        {
                          "@string":["BathymetryGeneratorPrototype","is a prototype definition file","","Click this text to see","BathymetryGeneratorExample"],
                          "-fontStyle":
                            { "FontStyle":
                              {
                                "@justify":["MIDDLE","MIDDLE"]
                              }
                            }
                        }
                      },
                    "-appearance":
                      { "Appearance":
                        {
                          "-material":
                            { "Material":
                              {
                                "@diffuseColor":[0.6,0.8,0.4]
                              }
                            }
                        }
                      }
                  }
                }
              ]
            }
          }
        ]
    }
  }
}