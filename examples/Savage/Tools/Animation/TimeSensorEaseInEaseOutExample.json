{ "X3D": {
    "encoding":"UTF-8",
    "@profile":"Immersive",
    "@version":"3.2",
    "@xsd:noNamespaceSchemaLocation":"http://www.web3d.org/specifications/x3d-3.2.xsd",
    "JSON schema":"http://www.web3d.org/specifications/x3d-3.3-JSONSchema.json",
    "head": {
        "meta": [
          {
            "@name":"title",
            "@content":"TimeSensorEaseInEaseOutExample.x3d"
          },
          {
            "@name":"description",
            "@content":"Time sensor ease-in ease-out design pattern: example use."
          },
          {
            "@name":"creator",
            "@content":"Don Brutzman and MV4205 class"
          },
          {
            "@name":"created",
            "@content":"4 April 2006"
          },
          {
            "@name":"modified",
            "@content":"18 October 2009"
          },
          {
            "@name":"reference",
            "@content":"TimeSensorEaseInEaseOutPrototype.x3d"
          },
          {
            "@name":"reference",
            "@content":"TimeDelaySensorExample.x3d"
          },
          {
            "@name":"reference",
            "@content":"TimeSensorEaseInEaseOut.png"
          },
          {
            "@name":"subject",
            "@content":"TimeDelaySensor"
          },
          {
            "@name":"info",
            "@content":"X3D v3.1 or greater"
          },
          {
            "@name":"identifier",
            "@content":"https://savage.nps.edu/Savage/Tools/Animation/TimeSensorEaseInEaseOutExample.x3d"
          },
          {
            "@name":"generator",
            "@content":"X3D-Edit 3.2, https://savage.nps.edu/X3D-Edit"
          },
          {
            "@name":"license",
            "@content":"../../license.html"
          },
          {
            "@name":"translated",
            "@content":"19 March 2017"
          },
          {
            "@name":"generator",
            "@content":"X3dToJson.xslt, http://www.web3d.org/x3d/stylesheets/X3dToJson.html"
          },
          {
            "@name":"warning",
            "@content":"An experimental version of X3D JSON encoding is used for this scene.  Status online at http://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
          }
        ]
    },
    "Scene": {
        "-children":[
          { "ExternProtoDeclare":
            {
              "@name":"TimeSensorEaseInEaseOut",
              "@appinfo":"TimeSensorEaseInEaseOut is a TimeSensor node with gradual start and stop rates",
              "@url":["TimeSensorEaseInEaseOutPrototype.x3d#TimeSensorEaseInEaseOut","../../../Savage/Tools/Animation/TimeSensorEaseInEaseOutPrototype.x3d#TimeSensorEaseInEaseOut","https://savage.nps.edu/Savage/Tools/Animation/TimeSensorEaseInEaseOutPrototype.x3d#TimeSensorEaseInEaseOut","TimeSensorEaseInEaseOutPrototype.wrl#TimeSensorEaseInEaseOut","../../../Savage/Tools/Animation/TimeSensorEaseInEaseOutPrototype.wrl#TimeSensorEaseInEaseOut","https://savage.nps.edu/Savage/Tools/Animation/TimeSensorEaseInEaseOutPrototype.wrl#TimeSensorEaseInEaseOut"],
              "field": [
                {
                  "@name":"enabled",
                  "@accessType":"inputOutput",
                  "@appinfo":"whether sensor is active",
                  "@type":"SFBool"
                },
                {
                  "@name":"cycleInterval",
                  "@accessType":"inputOutput",
                  "@appinfo":"loop duration in seconds",
                  "@type":"SFTime"
                },
                {
                  "@name":"fraction_changed",
                  "@accessType":"outputOnly",
                  "@appinfo":"fraction_changed sends values in range [0,1] showing time progress in the current cycle",
                  "@type":"SFFloat"
                },
                {
                  "@name":"loop",
                  "@accessType":"inputOutput",
                  "@appinfo":"repeat indefinitely when loop=true, repeat only once when loop=false",
                  "@type":"SFBool"
                },
                {
                  "@name":"isActive",
                  "@accessType":"outputOnly",
                  "@appinfo":"isActive true/false events are sent when TimeSensor starts/stops running",
                  "@type":"SFBool"
                },
                {
                  "@name":"startTime",
                  "@accessType":"inputOutput",
                  "@appinfo":"when current time exceeds startTime, isActive becomes true and sensor becomes active",
                  "@type":"SFTime"
                },
                {
                  "@name":"stopTime",
                  "@accessType":"inputOutput",
                  "@appinfo":"when current time exceeds stopTime, isActive becomes false and sensor becomes inactive",
                  "@type":"SFTime"
                },
                {
                  "@name":"cycleTime",
                  "@accessType":"outputOnly",
                  "@appinfo":"cycleTime sends a time event at startTime, and also at the beginning of each new cycle",
                  "@type":"SFTime"
                },
                {
                  "@name":"time",
                  "@accessType":"outputOnly",
                  "@appinfo":"absolute time (since January 1, 1970) for each event loop",
                  "@type":"SFTime"
                },
                {
                  "@name":"pauseTime",
                  "@accessType":"inputOutput",
                  "@appinfo":"when current time exceeds pauseTime, isPaused becomes false and sensor becomes paused",
                  "@type":"SFTime"
                },
                {
                  "@name":"isPaused",
                  "@accessType":"outputOnly",
                  "@appinfo":"isPaused true/false events are sent when TimeSensor is paused/resumed",
                  "@type":"SFBool"
                },
                {
                  "@name":"elapsedTime",
                  "@accessType":"outputOnly",
                  "@appinfo":"elapsed time since TimeSensor activated/running, cumulative in seconds, not counting any paused time",
                  "@type":"SFTime"
                },
                {
                  "@name":"resumeTime",
                  "@accessType":"inputOutput",
                  "@appinfo":"when current time exceeds resumeTime, isPaused becomes false and sensor resumes running",
                  "@type":"SFTime"
                }
              ]
            }
          },
          {
            "#comment":"===================="
          },
          { "Transform":
            {
              "@DEF":"TransformBoxLinear",
              "@translation":[-3,2,0],
              "-children":[
                { "Shape":
                  {
                    "-geometry":
                      { "Box":
                        {
                        }
                      },
                    "-appearance":
                      { "Appearance":
                        {
                          "-material":
                            { "Material":
                              {
                              }
                            }
                        }
                      }
                  }
                }
              ]
            }
          },
          { "Transform":
            {
              "@DEF":"TransformBoxEasy",
              "@translation":[-3,1,0],
              "-children":[
                { "Shape":
                  {
                    "-geometry":
                      { "Box":
                        {
                        }
                      },
                    "-appearance":
                      { "Appearance":
                        {
                          "-material":
                            { "Material":
                              {
                                "@diffuseColor":[0.9,0.3,0.2]
                              }
                            }
                        }
                      }
                  }
                }
              ]
            }
          },
          { "Transform":
            {
              "@translation":[0,-2,0],
              "-children":[
                { "Group":
                  {
                    "@DEF":"TextTouchGroup",
                    "-children":[
                      { "Shape":
                        {
                          "-geometry":
                            { "Text":
                              {
                                "@string":["click text to move Boxes:","linear TimeSensor grey","EaseInEaseOut red"],
                                "-fontStyle":
                                  { "FontStyle":
                                    {
                                      "@justify":["MIDDLE","MIDDLE"]
                                    }
                                  }
                              }
                            },
                          "-appearance":
                            { "Appearance":
                              {
                                "-material":
                                  { "Material":
                                    {
                                      "@DEF":"TextColor",
                                      "@diffuseColor":[0,0.7,0.7]
                                    }
                                  }
                              }
                            }
                        }
                      },
                      { "TouchSensor":
                        {
                          "@DEF":"TouchSensorActive",
                          "@description":"click to initiate time delay and color change"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "#comment":"===================="
          },
          { "Group":
            {
              "@DEF":"TextAnimationLinearGroup",
              "-children":[
                { "TimeSensor":
                  {
                    "@DEF":"LinearClock",
                    "@cycleInterval":3
                  }
                },
                { "ROUTE":
                  {
                    "@fromField":"touchTime",
                    "@fromNode":"TouchSensorActive",
                    "@toField":"set_startTime",
                    "@toNode":"LinearClock"
                  }
                },
                { "PositionInterpolator":
                  {
                    "@DEF":"MoveLinear",
                    "@key":[0,1],
                    "@keyValue":[-3,2,0,3,2,0]
                  }
                },
                { "ROUTE":
                  {
                    "@fromField":"fraction_changed",
                    "@fromNode":"LinearClock",
                    "@toField":"set_fraction",
                    "@toNode":"MoveLinear"
                  }
                },
                { "ROUTE":
                  {
                    "@fromField":"value_changed",
                    "@fromNode":"MoveLinear",
                    "@toField":"set_translation",
                    "@toNode":"TransformBoxLinear"
                  }
                }
              ]
            }
          },
          { "Group":
            {
              "@DEF":"TextAnimationEasedGroup",
              "-children":[
                { "ProtoInstance":
                  {
                    "@name":"TimeSensorEaseInEaseOut",
                    "@DEF":"EasyClock",
                    "fieldValue": [
                      {
                        "@name":"cycleInterval",
                        "@value":3
                      }
                    ]
                  }
                },
                { "ROUTE":
                  {
                    "@fromField":"touchTime",
                    "@fromNode":"TouchSensorActive",
                    "@toField":"startTime",
                    "@toNode":"EasyClock"
                  }
                },
                { "PositionInterpolator":
                  {
                    "@DEF":"MoveEasy",
                    "@key":[0,1],
                    "@keyValue":[-3,1,0,3,1,0]
                  }
                },
                { "ROUTE":
                  {
                    "@fromField":"fraction_changed",
                    "@fromNode":"EasyClock",
                    "@toField":"set_fraction",
                    "@toNode":"MoveEasy"
                  }
                },
                { "ROUTE":
                  {
                    "@fromField":"value_changed",
                    "@fromNode":"MoveEasy",
                    "@toField":"set_translation",
                    "@toNode":"TransformBoxEasy"
                  }
                }
              ]
            }
          }
        ]
    }
  }
}