{ "X3D": {
    "encoding":"UTF-8",
    "@profile":"Immersive",
    "@version":"3.0",
    "@xsd:noNamespaceSchemaLocation":"http://www.web3d.org/specifications/x3d-3.0.xsd",
    "JSON schema":"http://www.web3d.org/specifications/x3d-3.3-JSONSchema.json",
    "head": {
        "meta": [
          {
            "@name":"title",
            "@content":"RelativeProximitySensorExample.x3d"
          },
          {
            "@name":"description",
            "@content":"RelativeProximitySensor design pattern: example use for paired object-to-object collision detection."
          },
          {
            "@name":"creator",
            "@content":"Don Brutzman and MV4204 class"
          },
          {
            "@name":"created",
            "@content":"7 September 2004"
          },
          {
            "@name":"modified",
            "@content":"14 January 2014"
          },
          {
            "@name":"reference",
            "@content":"RelativeProximitySensorPrototype.x3d"
          },
          {
            "@name":"subject",
            "@content":"Object-to-object collision detection"
          },
          {
            "@name":"identifier",
            "@content":"https://savage.nps.edu/Savage/Tools/Animation/RelativeProximitySensorExample.x3d"
          },
          {
            "@name":"generator",
            "@content":"X3D-Edit 3.2, https://savage.nps.edu/X3D-Edit"
          },
          {
            "@name":"license",
            "@content":"../../license.html"
          },
          {
            "@name":"translated",
            "@content":"19 March 2017"
          },
          {
            "@name":"generator",
            "@content":"X3dToJson.xslt, http://www.web3d.org/x3d/stylesheets/X3dToJson.html"
          },
          {
            "@name":"warning",
            "@content":"An experimental version of X3D JSON encoding is used for this scene.  Status online at http://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
          }
        ]
    },
    "Scene": {
        "-children":[
          { "ExternProtoDeclare":
            {
              "@name":"RelativeProximitySensor",
              "@appinfo":"RelativeProximitySensor measures paired object-to-object collision detection",
              "@url":["RelativeProximitySensorPrototype.x3d#RelativeProximitySensor","https://savage.nps.edu/Savage/Tools/Animation/RelativeProximitySensorPrototype.x3d#RelativeProximitySensor","RelativeProximitySensorPrototype.wrl#RelativeProximitySensor","https://savage.nps.edu/Savage/Tools/Animation/RelativeProximitySensorPrototype.wrl#RelativeProximitySensor"],
              "field": [
                {
                  "@name":"description",
                  "@accessType":"inputOutput",
                  "@appinfo":"describe the purpose of this sensor",
                  "@type":"SFString"
                },
                {
                  "@name":"locationPrimary",
                  "@accessType":"initializeOnly",
                  "@appinfo":"where is the primary object",
                  "@type":"SFVec3f"
                },
                {
                  "@name":"set_locationPrimary",
                  "@accessType":"inputOnly",
                  "@appinfo":"update location of the primary object",
                  "@type":"SFVec3f"
                },
                {
                  "@name":"locationSecondary",
                  "@accessType":"initializeOnly",
                  "@appinfo":"where is the secondary object",
                  "@type":"SFVec3f"
                },
                {
                  "@name":"set_locationSecondary",
                  "@accessType":"inputOnly",
                  "@appinfo":"update location of the secondary object",
                  "@type":"SFVec3f"
                },
                {
                  "@name":"proximityRangeThreshold",
                  "@accessType":"initializeOnly",
                  "@appinfo":"distance for detecting object-to-object collision",
                  "@type":"SFFloat"
                },
                {
                  "@name":"set_proximityRangeThreshold",
                  "@accessType":"inputOnly",
                  "@appinfo":"change threshold distance for detecting collision",
                  "@type":"SFFloat"
                },
                {
                  "@name":"isInRange",
                  "@accessType":"outputOnly",
                  "@appinfo":"is object-to-object distance less than proximityRangeThreshold?",
                  "@type":"SFBool"
                },
                {
                  "@name":"isInRangeTime",
                  "@accessType":"outputOnly",
                  "@appinfo":"when did object-to-object range meet detection criteria?",
                  "@type":"SFTime"
                },
                {
                  "@name":"enabled",
                  "@accessType":"initializeOnly",
                  "@appinfo":"whether sensor is active",
                  "@type":"SFBool"
                },
                {
                  "@name":"set_enabled",
                  "@accessType":"inputOnly",
                  "@type":"SFBool"
                }
              ]
            }
          },
          { "Viewpoint":
            {
              "@description":"RelativeProximitySensor test",
              "@position":[0,2,25]
            }
          },
          {
            "#comment":"===================="
          },
          { "Group":
            {
              "@DEF":"TextTouchGroup",
              "-children":[
                { "Transform":
                  {
                    "@translation":[0,5,0],
                    "-children":[
                      { "Shape":
                        {
                          "-geometry":
                            { "Text":
                              {
                                "@string":["click text to watch object motion and","RelativeProximitySensor console alerts"],
                                "-fontStyle":
                                  { "FontStyle":
                                    {
                                      "@justify":["MIDDLE","MIDDLE"],
                                      "@size":1.8
                                    }
                                  }
                              }
                            },
                          "-appearance":
                            { "Appearance":
                              {
                                "-material":
                                  { "Material":
                                    {
                                      "@DEF":"TextColor",
                                      "@diffuseColor":[0.8,0.1,0.1]
                                    }
                                  }
                              }
                            }
                        }
                      },
                      { "Shape":
                        {
                          "-geometry":
                            { "Box":
                              {
                                "@size":[25,4,0.01]
                              }
                            },
                          "-appearance":
                            { "Appearance":
                              {
                                "-material":
                                  { "Material":
                                    {
                                      "@transparency":1
                                    }
                                  }
                              }
                            }
                        }
                      }
                    ]
                  }
                },
                { "TouchSensor":
                  {
                    "@DEF":"TouchSensorActive",
                    "@description":"click to initiate time delay and color change"
                  }
                }
              ]
            }
          },
          {
            "#comment":"===================="
          },
          { "Group":
            {
              "@DEF":"ShapeAnimationGroup",
              "-children":[
                { "TimeSensor":
                  {
                    "@DEF":"AnimationClock",
                    "@cycleInterval":4
                  }
                },
                { "ROUTE":
                  {
                    "@fromField":"touchTime",
                    "@fromNode":"TouchSensorActive",
                    "@toField":"set_startTime",
                    "@toNode":"AnimationClock"
                  }
                },
                { "Transform":
                  {
                    "@DEF":"LeftHandBoxTransform",
                    "@translation":[-10,0,0],
                    "-children":[
                      { "Shape":
                        {
                          "-geometry":
                            { "Box":
                              {
                              }
                            },
                          "-appearance":
                            { "Appearance":
                              {
                                "-material":
                                  { "Material":
                                    {
                                      "@diffuseColor":[0.1,0.8,0.1]
                                    }
                                  }
                              }
                            }
                        }
                      },
                      { "PositionInterpolator":
                        {
                          "@DEF":"BoxMover",
                          "@key":[0,0.5,1],
                          "@keyValue":[-10,0,0,-3,0,0,-10,0,0]
                        }
                      },
                      { "ROUTE":
                        {
                          "@fromField":"fraction_changed",
                          "@fromNode":"AnimationClock",
                          "@toField":"set_fraction",
                          "@toNode":"BoxMover"
                        }
                      },
                      { "ROUTE":
                        {
                          "@fromField":"value_changed",
                          "@fromNode":"BoxMover",
                          "@toField":"set_translation",
                          "@toNode":"LeftHandBoxTransform"
                        }
                      }
                    ]
                  }
                },
                { "Transform":
                  {
                    "@DEF":"RightHandSphereTransform",
                    "@translation":[10,0,0],
                    "-children":[
                      { "Shape":
                        {
                          "-geometry":
                            { "Sphere":
                              {
                              }
                            },
                          "-appearance":
                            { "Appearance":
                              {
                                "-material":
                                  { "Material":
                                    {
                                      "@diffuseColor":[0.1,0.1,0.8]
                                    }
                                  }
                              }
                            }
                        }
                      },
                      { "PositionInterpolator":
                        {
                          "@DEF":"SphereMover",
                          "@key":[0,0.5,1],
                          "@keyValue":[10,0,0,2,0,0,10,0,0]
                        }
                      },
                      { "ROUTE":
                        {
                          "@fromField":"fraction_changed",
                          "@fromNode":"AnimationClock",
                          "@toField":"set_fraction",
                          "@toNode":"SphereMover"
                        }
                      },
                      { "ROUTE":
                        {
                          "@fromField":"value_changed",
                          "@fromNode":"SphereMover",
                          "@toField":"set_translation",
                          "@toNode":"RightHandSphereTransform"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          { "ProtoInstance":
            {
              "@name":"RelativeProximitySensor",
              "@DEF":"RPS",
              "fieldValue": [
                {
                  "@name":"description",
                  "@value":"test case"
                },
                {
                  "@name":"enabled",
                  "@value":true
                },
                {
                  "@name":"locationPrimary",
                  "@value":[-10,0,0]
                },
                {
                  "@name":"locationSecondary",
                  "@value":[10,0,0]
                }
              ]
            }
          },
          {
            "#comment":"Connect interpolator output to monitor movement of first object."
          },
          { "ROUTE":
            {
              "@fromField":"value_changed",
              "@fromNode":"BoxMover",
              "@toField":"set_locationPrimary",
              "@toNode":"RPS"
            }
          },
          {
            "#comment":"Test use of Transform output, which means that this sensor could be used to monitor other nodes that might have multiple movers."
          },
          { "ROUTE":
            {
              "@fromField":"translation_changed",
              "@fromNode":"RightHandSphereTransform",
              "@toField":"set_locationSecondary",
              "@toNode":"RPS"
            }
          }
        ]
    }
  }
}