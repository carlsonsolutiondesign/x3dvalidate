{ "X3D": {
    "encoding":"UTF-8",
    "@profile":"Immersive",
    "@version":"3.0",
    "@xsd:noNamespaceSchemaLocation":"http://www.web3d.org/specifications/x3d-3.0.xsd",
    "JSON schema":"http://www.web3d.org/specifications/x3d-3.3-JSONSchema.json",
    "head": {
        "meta": [
          {
            "@name":"title",
            "@content":"FlyingTextExample.x3d"
          },
          {
            "@name":"description",
            "@content":"Prototype definition for a flying text message. Waypoints, time intervals, cycleInterval and text message can be overridden."
          },
          {
            "@name":"creator",
            "@content":"Murat Onder"
          },
          {
            "@name":"created",
            "@content":"2 June 2004"
          },
          {
            "@name":"modified",
            "@content":"18 October 2009"
          },
          {
            "@name":"reference",
            "@content":"FlyingTextExample.x3d"
          },
          {
            "@name":"identifier",
            "@content":"https://savage.nps.edu/Savage/Tools/Animation/FlyingTextExample.x3d"
          },
          {
            "@name":"generator",
            "@content":"X3D-Edit 3.2, https://savage.nps.edu/X3D-Edit"
          },
          {
            "@name":"license",
            "@content":"../../license.html"
          },
          {
            "@name":"translated",
            "@content":"19 March 2017"
          },
          {
            "@name":"generator",
            "@content":"X3dToJson.xslt, http://www.web3d.org/x3d/stylesheets/X3dToJson.html"
          },
          {
            "@name":"warning",
            "@content":"An experimental version of X3D JSON encoding is used for this scene.  Status online at http://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
          }
        ]
    },
    "Scene": {
        "-children":[
          { "ExternProtoDeclare":
            {
              "@name":"DoubleClickTouchSensor",
              "@appinfo":"DoubleClickTouchSensor functionality activates when user double clicks (or double selects) within maxDelayInterval",
              "@url":["../../Savage/Tools/Animation/DoubleClickTouchSensorPrototype.x3d#DoubleClickTouchSensor","../../../Savage/Tools/Animation/DoubleClickTouchSensorPrototype.x3d#DoubleClickTouchSensor","https://savage.nps.edu/Savage/Tools/Animation/DoubleClickTouchSensorPrototype.x3d#DoubleClickTouchSensor","../../../Savage/Tools/Animation/DoubleClickTouchSensorPrototype.wrl#DoubleClickTouchSensor","../../Savage/Tools/Animation/DoubleClickTouchSensorPrototype.wrl#DoubleClickTouchSensor","https://savage.nps.edu/Savage/Tools/Animation/DoubleClickTouchSensorPrototype.wrl#DoubleClickTouchSensor"],
              "field": [
                {
                  "@name":"description",
                  "@accessType":"inputOutput",
                  "@appinfo":"describe the purpose of this sensor",
                  "@type":"SFString"
                },
                {
                  "@name":"maxDelayInterval",
                  "@accessType":"initializeOnly",
                  "@appinfo":"seconds",
                  "@type":"SFTime"
                },
                {
                  "@name":"enabled",
                  "@accessType":"inputOutput",
                  "@type":"SFBool"
                },
                {
                  "@name":"isActive",
                  "@accessType":"outputOnly",
                  "@type":"SFBool"
                },
                {
                  "@name":"isOver",
                  "@accessType":"outputOnly",
                  "@type":"SFBool"
                },
                {
                  "@name":"touchTime",
                  "@accessType":"outputOnly",
                  "@appinfo":"seconds",
                  "@type":"SFTime"
                },
                {
                  "@name":"hitPoint_changed",
                  "@accessType":"outputOnly",
                  "@type":"SFVec3f"
                },
                {
                  "@name":"hitNormal_changed",
                  "@accessType":"outputOnly",
                  "@type":"SFVec3f"
                },
                {
                  "@name":"hitTexCoord_changed",
                  "@accessType":"outputOnly",
                  "@type":"SFVec2f"
                },
                {
                  "@name":"metadata",
                  "@accessType":"initializeOnly",
                  "@type":"SFNode"
                },
                {
                  "@name":"traceEnabled",
                  "@accessType":"initializeOnly",
                  "@type":"SFBool"
                }
              ]
            }
          },
          { "ProtoInstance":
            {
              "@name":"DoubleClickTouchSensor",
              "@DEF":"ExampleDoubleClickTouchSensor",
              "fieldValue": [
                {
                  "@name":"description",
                  "@value":"double click to initiate time-delayed event"
                },
                {
                  "@name":"maxDelayInterval",
                  "@value":1
                }
              ]
            }
          },
          { "ExternProtoDeclare":
            {
              "@name":"FlyingText",
              "@appinfo":"Visualize message transfer between two points as flying text",
              "@url":["../../../Savage/Tools/Animation/FlyingTextPrototype.x3d#FlyingText","https://savage.nps.edu/Savage/Tools/Animation/FlyingTextPrototype.x3d#FlyingText","../../../Savage/Tools/Animation/FlyingTextPrototype.wrl#FlyingText","https://savage.nps.edu/Savage/Tools/Animation/FlyingTextPrototype.wrl#FlyingText"],
              "field": [
                {
                  "@name":"waypoints",
                  "@accessType":"initializeOnly",
                  "@type":"MFVec3f"
                },
                {
                  "@name":"set_waypoints",
                  "@accessType":"inputOnly",
                  "@type":"MFVec3f"
                },
                {
                  "@name":"timeIntervals",
                  "@accessType":"initializeOnly",
                  "@type":"MFFloat"
                },
                {
                  "@name":"set_timeIntervals",
                  "@accessType":"inputOnly",
                  "@type":"MFFloat"
                },
                {
                  "@name":"textMessage",
                  "@accessType":"initializeOnly",
                  "@type":"MFString"
                },
                {
                  "@name":"set_textMessage",
                  "@accessType":"inputOnly",
                  "@type":"MFString"
                },
                {
                  "@name":"visible",
                  "@accessType":"initializeOnly",
                  "@type":"SFBool"
                },
                {
                  "@name":"set_visible",
                  "@accessType":"inputOnly",
                  "@type":"SFBool"
                },
                {
                  "@name":"loop",
                  "@accessType":"initializeOnly",
                  "@type":"SFBool"
                },
                {
                  "@name":"axisOfRotation",
                  "@accessType":"initializeOnly",
                  "@type":"SFVec3f"
                },
                {
                  "@name":"timeSensorEnabled",
                  "@accessType":"initializeOnly",
                  "@type":"SFBool"
                },
                {
                  "@name":"startTime",
                  "@accessType":"inputOutput",
                  "@type":"SFTime"
                },
                {
                  "@name":"set_startTime",
                  "@accessType":"inputOnly",
                  "@type":"SFTime"
                },
                {
                  "@name":"stopTime",
                  "@accessType":"inputOutput",
                  "@type":"SFTime"
                },
                {
                  "@name":"set_stopTime",
                  "@accessType":"inputOnly",
                  "@type":"SFTime"
                },
                {
                  "@name":"traceEnabled",
                  "@accessType":"initializeOnly",
                  "@type":"SFBool"
                },
                {
                  "@name":"textDiffuseColor",
                  "@accessType":"inputOutput",
                  "@type":"SFColor"
                },
                {
                  "@name":"fontStyle",
                  "@accessType":"inputOutput",
                  "@type":"SFNode"
                }
              ]
            }
          },
          { "Background":
            {
              "@groundAngle":[1.309,1.570796],
              "@groundColor":[0.1,0.1,0,0.5,0.25,0.2,0.6,0.6,0.2],
              "@skyAngle":[1.309,1.571],
              "@skyColor":[0.7,0.3,0,0.6,0.4,0,1,1,0]
            }
          },
          { "Transform":
            {
              "@DEF":"ProtoInstanceTransform",
              "-children":[
                { "ProtoInstance":
                  {
                    "@name":"FlyingText",
                    "@DEF":"FlyingTextInstance",
                    "fieldValue": [
                      {
                        "@name":"waypoints",
                        "@value":[0,0,0,-4,0,0,4,2,-2,0,-2,2,0,0,0]
                      },
                      {
                        "@name":"timeIntervals",
                        "@value":[5,4,1,3]
                      },
                      {
                        "@name":"textMessage",
                        "@value":["flying","text"]
                      }
                    ]
                  }
                }
              ]
            }
          },
          { "Group":
            {
              "-children":[
                { "TouchSensor":
                  {
                    "@DEF":"TouchRedSphere",
                    "@description":"touch to start animation"
                  }
                },
                { "ROUTE":
                  {
                    "@fromField":"touchTime",
                    "@fromNode":"TouchRedSphere",
                    "@toField":"set_startTime",
                    "@toNode":"FlyingTextInstance"
                  }
                },
                { "Transform":
                  {
                    "@translation":[-4,0,0],
                    "-children":[
                      { "Shape":
                        {
                          "-geometry":
                            { "Sphere":
                              {
                                "@radius":0.2
                              }
                            },
                          "-appearance":
                            { "Appearance":
                              {
                                "-material":
                                  { "Material":
                                    {
                                      "@diffuseColor":[1,0,0]
                                    }
                                  }
                              }
                            }
                        }
                      }
                    ]
                  }
                },
                { "Transform":
                  {
                    "@translation":[4,2,-2],
                    "-children":[
                      { "Shape":
                        {
                          "-geometry":
                            { "Sphere":
                              {
                                "@radius":0.2
                              }
                            },
                          "-appearance":
                            { "Appearance":
                              {
                                "-material":
                                  { "Material":
                                    {
                                      "@diffuseColor":[0,1,0]
                                    }
                                  }
                              }
                            }
                        }
                      }
                    ]
                  }
                },
                { "Transform":
                  {
                    "@translation":[0,-2,2],
                    "-children":[
                      { "Shape":
                        {
                          "-geometry":
                            { "Sphere":
                              {
                                "@radius":0.2
                              }
                            },
                          "-appearance":
                            { "Appearance":
                              {
                                "-material":
                                  { "Material":
                                    {
                                      "@diffuseColor":[0,0,1]
                                    }
                                  }
                              }
                            }
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        ]
    }
  }
}