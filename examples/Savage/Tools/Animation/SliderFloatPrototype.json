{ "X3D": {
    "encoding":"UTF-8",
    "@profile":"Immersive",
    "@version":"3.0",
    "@xsd:noNamespaceSchemaLocation":"http://www.web3d.org/specifications/x3d-3.0.xsd",
    "JSON schema":"http://www.web3d.org/specifications/x3d-3.3-JSONSchema.json",
    "head": {
        "meta": [
          {
            "@name":"title",
            "@content":"SliderFloatPrototype.x3d"
          },
          {
            "@name":"description",
            "@content":"A Slider prototype enabling mouse input where float output values are needed. Size, min/max values and color are defined by the author."
          },
          {
            "@name":"creator",
            "@content":"Mike Hunsberger, Jane Wu"
          },
          {
            "@name":"created",
            "@content":"17 October 2001"
          },
          {
            "@name":"modified",
            "@content":"25 February 2010"
          },
          {
            "@name":"subject",
            "@content":"animation slider"
          },
          {
            "@name":"identifier",
            "@content":"https://savage.nps.edu/Savage/Tools/Animation/SliderFloatPrototype.x3d"
          },
          {
            "@name":"generator",
            "@content":"X3D-Edit 3.2, https://savage.nps.edu/X3D-Edit"
          },
          {
            "@name":"license",
            "@content":"../../license.html"
          },
          {
            "@name":"translated",
            "@content":"19 March 2017"
          },
          {
            "@name":"generator",
            "@content":"X3dToJson.xslt, http://www.web3d.org/x3d/stylesheets/X3dToJson.html"
          },
          {
            "@name":"warning",
            "@content":"An experimental version of X3D JSON encoding is used for this scene.  Status online at http://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
          }
        ]
    },
    "Scene": {
        "-children":[
          { "ProtoDeclare":
            {
              "@name":"SliderFloat",
              "@appinfo":"Slider user-interface widget that produces floating-point output values",
              "ProtoInterface": {
                  "field": [
                    {
                      "@name":"layoutDirection",
                      "@accessType":"initializeOnly",
                      "@appinfo":"Allowed values: vertical, horizontal",
                      "@type":"SFString",
                      "@value":"vertical"
                    },
                    {
                      "@name":"height",
                      "@accessType":"initializeOnly",
                      "@appinfo":"default value 1.0",
                      "@type":"SFFloat",
                      "@value":1.0
                    },
                    {
                      "@name":"radius",
                      "@accessType":"initializeOnly",
                      "@appinfo":"default value 0.1",
                      "@type":"SFFloat",
                      "@value":0.1
                    },
                    {
                      "@name":"barRadius",
                      "@accessType":"initializeOnly",
                      "@appinfo":"default value 0.02",
                      "@type":"SFFloat",
                      "@value":0.02
                    },
                    {
                      "@name":"sliderBarColor",
                      "@accessType":"initializeOnly",
                      "@appinfo":"default value .8 .4 .8",
                      "@type":"SFColor",
                      "@value":[0.8,0.4,0.8]
                    },
                    {
                      "@name":"sliderBallColor",
                      "@accessType":"initializeOnly",
                      "@appinfo":"default value .3 .4 .8",
                      "@type":"SFColor",
                      "@value":[0.3,0.4,0.8]
                    },
                    {
                      "@name":"sliderEndColor",
                      "@accessType":"initializeOnly",
                      "@appinfo":"default value .2 .3 .9",
                      "@type":"SFColor",
                      "@value":[0.2,0.3,0.9]
                    },
                    {
                      "@name":"min",
                      "@accessType":"initializeOnly",
                      "@appinfo":"default value 0.0",
                      "@type":"SFFloat",
                      "@value":0.0
                    },
                    {
                      "@name":"max",
                      "@accessType":"initializeOnly",
                      "@appinfo":"default value 10.0",
                      "@type":"SFFloat",
                      "@value":10.0
                    },
                    {
                      "@name":"value",
                      "@accessType":"initializeOnly",
                      "@appinfo":"default value 0.0",
                      "@type":"SFFloat",
                      "@value":0.0
                    },
                    {
                      "@name":"setMin",
                      "@accessType":"inputOnly",
                      "@appinfo":"set minimum value for slider bar",
                      "@type":"SFFloat"
                    },
                    {
                      "@name":"setMax",
                      "@accessType":"inputOnly",
                      "@appinfo":"set maximum value for slider bar",
                      "@type":"SFFloat"
                    },
                    {
                      "@name":"setValue",
                      "@accessType":"inputOnly",
                      "@appinfo":"set value for slider bar",
                      "@type":"SFFloat"
                    },
                    {
                      "@name":"valueChanged",
                      "@accessType":"outputOnly",
                      "@appinfo":"output value for slider bar",
                      "@type":"SFFloat"
                    },
                    {
                      "@name":"traceEnabled",
                      "@accessType":"initializeOnly",
                      "@appinfo":"enable/disable console output for troubleshooting",
                      "@type":"SFBool",
                      "@value":false
                    }
                  ]
              },
              "ProtoBody": {
                  "-children":[
                    { "Group":
                      {
                        "-children":[
                          { "Transform":
                            {
                              "@DEF":"LayoutDirectionTransform",
                              "-children":[
                                { "Transform":
                                  {
                                    "@DEF":"SliderBarTransform",
                                    "-children":[
                                      { "Shape":
                                        {
                                          "-appearance":
                                            { "Appearance":
                                              {
                                                "-material":
                                                  { "Material":
                                                    {
                                                      "@DEF":"SliderBarMaterial",
                                                      "IS": {
                                                          "connect": [
                                                            {
                                                              "@nodeField":"diffuseColor",
                                                              "@protoField":"sliderBarColor"
                                                            },
                                                            {
                                                              "@nodeField":"emissiveColor",
                                                              "@protoField":"sliderBarColor"
                                                            }
                                                          ]
                                                      }
                                                    }
                                                  }
                                              }
                                            },
                                          "-geometry":
                                            { "Cylinder":
                                              {
                                                "@DEF":"SliderBar",
                                                "IS": {
                                                    "connect": [
                                                      {
                                                        "@nodeField":"height",
                                                        "@protoField":"height"
                                                      },
                                                      {
                                                        "@nodeField":"radius",
                                                        "@protoField":"barRadius"
                                                      }
                                                    ]
                                                }
                                              }
                                            }
                                        }
                                      }
                                    ]
                                  }
                                },
                                { "Transform":
                                  {
                                    "@DEF":"SliderBallTransform",
                                    "-children":[
                                      { "PlaneSensor":
                                        {
                                          "@DEF":"SliderBallPlaneSensor",
                                          "@description":"select and drag to change values"
                                        }
                                      },
                                      { "Shape":
                                        {
                                          "-appearance":
                                            { "Appearance":
                                              {
                                                "-material":
                                                  { "Material":
                                                    {
                                                      "@DEF":"SliderBallMaterial",
                                                      "IS": {
                                                          "connect": [
                                                            {
                                                              "@nodeField":"diffuseColor",
                                                              "@protoField":"sliderBallColor"
                                                            }
                                                          ]
                                                      }
                                                    }
                                                  }
                                              }
                                            },
                                          "-geometry":
                                            { "Sphere":
                                              {
                                                "@DEF":"SliderBall",
                                                "IS": {
                                                    "connect": [
                                                      {
                                                        "@nodeField":"radius",
                                                        "@protoField":"radius"
                                                      }
                                                    ]
                                                }
                                              }
                                            }
                                        }
                                      }
                                    ]
                                  }
                                },
                                { "Transform":
                                  {
                                    "@DEF":"BottomEndTransform",
                                    "-children":[
                                      { "TouchSensor":
                                        {
                                          "@DEF":"BottomEndSensor",
                                          "@description":"touch bottom end to decrement"
                                        }
                                      },
                                      { "Shape":
                                        {
                                          "-appearance":
                                            { "Appearance":
                                              {
                                                "-material":
                                                  { "Material":
                                                    {
                                                      "IS": {
                                                          "connect": [
                                                            {
                                                              "@nodeField":"diffuseColor",
                                                              "@protoField":"sliderEndColor"
                                                            }
                                                          ]
                                                      }
                                                    }
                                                  }
                                              }
                                            },
                                          "-geometry":
                                            { "Cylinder":
                                              {
                                                "@height":0.05,
                                                "@radius":0.1
                                              }
                                            }
                                        }
                                      },
                                      { "Transform":
                                        {
                                          "@translation":[0,-0.1,0],
                                          "-children":[
                                            { "Shape":
                                              {
                                                "@DEF":"TransparentEndShape",
                                                "-appearance":
                                                  { "Appearance":
                                                    {
                                                      "-material":
                                                        { "Material":
                                                          {
                                                            "@transparency":1
                                                          }
                                                        }
                                                    }
                                                  },
                                                "-geometry":
                                                  { "Box":
                                                    {
                                                      "@size":[0.2,0.2,0.01]
                                                    }
                                                  }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                },
                                { "Transform":
                                  {
                                    "@DEF":"TopEndTransform",
                                    "-children":[
                                      { "TouchSensor":
                                        {
                                          "@DEF":"TopEndSensor",
                                          "@description":"touch top end to increment"
                                        }
                                      },
                                      { "Shape":
                                        {
                                          "-appearance":
                                            { "Appearance":
                                              {
                                                "-material":
                                                  { "Material":
                                                    {
                                                      "IS": {
                                                          "connect": [
                                                            {
                                                              "@nodeField":"diffuseColor",
                                                              "@protoField":"sliderEndColor"
                                                            }
                                                          ]
                                                      }
                                                    }
                                                  }
                                              }
                                            },
                                          "-geometry":
                                            { "Cylinder":
                                              {
                                                "@height":0.05,
                                                "@radius":0.1
                                              }
                                            }
                                        }
                                      },
                                      { "Transform":
                                        {
                                          "@translation":[0,0.1,0],
                                          "-children":[
                                            { "Shape":
                                              {
                                                "@USE":"TransparentEndShape"
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                },
                                { "Script":
                                  {
                                    "@DEF":"SliderScript",
                                    "-children":[
                                      {
                                        "#comment":"local variables"
                                      }
                                    ],
                                    "field": [
                                      {
                                        "@name":"height",
                                        "@accessType":"initializeOnly",
                                        "@type":"SFFloat"
                                      },
                                      {
                                        "@name":"radius",
                                        "@accessType":"initializeOnly",
                                        "@type":"SFFloat"
                                      },
                                      {
                                        "@name":"min",
                                        "@accessType":"initializeOnly",
                                        "@type":"SFFloat"
                                      },
                                      {
                                        "@name":"max",
                                        "@accessType":"initializeOnly",
                                        "@type":"SFFloat"
                                      },
                                      {
                                        "@name":"value",
                                        "@accessType":"initializeOnly",
                                        "@type":"SFFloat"
                                      },
                                      {
                                        "@name":"lastBallPosition",
                                        "@accessType":"initializeOnly",
                                        "@type":"SFVec3f",
                                        "@value":[0,0,0]
                                      },
                                      {
                                        "@name":"beginPosition",
                                        "@accessType":"initializeOnly",
                                        "@type":"SFVec3f",
                                        "@value":[0,0,0]
                                      },
                                      {
                                        "@name":"endPosition",
                                        "@accessType":"initializeOnly",
                                        "@type":"SFVec3f",
                                        "@value":[0,1,0]
                                      },
                                      {
                                        "@name":"incrementInterval",
                                        "@accessType":"initializeOnly",
                                        "@type":"SFFloat",
                                        "@value":0.1
                                      },
                                      {
                                        "@name":"setMin",
                                        "@accessType":"inputOnly",
                                        "@type":"SFFloat"
                                      },
                                      {
                                        "@name":"setMax",
                                        "@accessType":"inputOnly",
                                        "@type":"SFFloat"
                                      },
                                      {
                                        "@name":"setValue",
                                        "@accessType":"inputOnly",
                                        "@type":"SFFloat"
                                      },
                                      {
                                        "@name":"valueChanged",
                                        "@accessType":"outputOnly",
                                        "@type":"SFFloat"
                                      },
                                      {
                                        "@name":"bottomEndTouched",
                                        "@accessType":"inputOnly",
                                        "@type":"SFBool"
                                      },
                                      {
                                        "@name":"topEndTouched",
                                        "@accessType":"inputOnly",
                                        "@type":"SFBool"
                                      },
                                      {
                                        "@name":"setBallPosition",
                                        "@accessType":"inputOnly",
                                        "@type":"SFVec3f"
                                      },
                                      {
                                        "@name":"bottomEndPositionChanged",
                                        "@accessType":"outputOnly",
                                        "@type":"SFVec3f"
                                      },
                                      {
                                        "@name":"topEndPositionChanged",
                                        "@accessType":"outputOnly",
                                        "@type":"SFVec3f"
                                      },
                                      {
                                        "@name":"ballPositionChanged",
                                        "@accessType":"outputOnly",
                                        "@type":"SFVec3f"
                                      },
                                      {
                                        "@name":"minBallPositionChanged",
                                        "@accessType":"outputOnly",
                                        "@type":"SFVec2f"
                                      },
                                      {
                                        "@name":"maxBallPositionChanged",
                                        "@accessType":"outputOnly",
                                        "@type":"SFVec2f"
                                      },
                                      {
                                        "@name":"partialIncrement",
                                        "@accessType":"initializeOnly",
                                        "@type":"SFFloat",
                                        "@value":0.0
                                      },
                                      {
                                        "@name":"traceEnabled",
                                        "@accessType":"initializeOnly",
                                        "@type":"SFBool"
                                      }
                                    ],
                                    "IS": {
                                        "connect": [
                                          {
                                            "@nodeField":"height",
                                            "@protoField":"height"
                                          },
                                          {
                                            "@nodeField":"radius",
                                            "@protoField":"radius"
                                          },
                                          {
                                            "@nodeField":"min",
                                            "@protoField":"min"
                                          },
                                          {
                                            "@nodeField":"max",
                                            "@protoField":"max"
                                          },
                                          {
                                            "@nodeField":"value",
                                            "@protoField":"value"
                                          },
                                          {
                                            "@nodeField":"setMin",
                                            "@protoField":"setMin"
                                          },
                                          {
                                            "@nodeField":"setMax",
                                            "@protoField":"setMax"
                                          },
                                          {
                                            "@nodeField":"setValue",
                                            "@protoField":"setValue"
                                          },
                                          {
                                            "@nodeField":"valueChanged",
                                            "@protoField":"valueChanged"
                                          },
                                          {
                                            "@nodeField":"traceEnabled",
                                            "@protoField":"traceEnabled"
                                          }
                                        ]
                                    },
                                    "#sourceText":[
"ecmascript:",
"function initialize()",
"{",
"\ttracePrint('initialize() commenced...');",
"",
"\tbeginPosition = new SFVec3f(0, (height/2) * (-1) + radius, 0);",
"\tendPosition   = new SFVec3f(0, (height/2) - radius, 0);",
"\ttracePrint('beginPosition=' + beginPosition.toString() + ', endPosition=' + endPosition.toString());",
"\tincrementInterval = (height - (2 * radius)) / (max - min);",
"\ttracePrint('incrementInterval=' + incrementInterval.toString());",
"",
"\tbottomEndPositionChanged = new SFVec3f(0, (height/2) * (-1), 0);",
"\ttopEndPositionChanged    = new SFVec3f(0, (height/2), 0);",
"\ttracePrint('bottomEndPositionChanged=' + bottomEndPositionChanged.toString() + ', topEndPositionChanged=' + topEndPositionChanged.toString());",
"",
"\tminBallPositionChanged   = new SFVec2f(0, bottomEndPositionChanged.y + radius);",
"\tmaxBallPositionChanged   = new SFVec2f(0, topEndPositionChanged.y - radius);",
"\ttracePrint('minBallPositionChanged=' + minBallPositionChanged.toString() + ', maxBallPositionChanged=' + maxBallPositionChanged.toString());",
"",
"\tballPositionChanged = new SFVec3f(0, beginPosition.y + (incrementInterval * (value - min)), 0);",
"\tlastBallPosition = ballPositionChanged;",
"",
"\tif (value < min) value = min;",
"\tif (value > max) value = max;",
"",
"\tvalueChanged = value;",
"\ttracePrint('value=' + value.toString());",
"\ttracePrint('...initialize() complete');",
"}",
"",
"function setMin(inputValue, timeStamp)",
"{",
"\tmin = inputValue;",
"\tif (value < min) value = min;",
"",
"\tincrementInterval = (height - (2 * radius)) / (max - min);",
"\ttracePrint('incrementInterval=' + incrementInterval.toString());",
"",
"\tballPositionChanged = new SFVec3f(0, beginPosition.y + (incrementInterval * (value - min)), 0);",
"\tlastBallPosition = ballPositionChanged;",
"",
"\tvalueChanged = value;",
"\ttracePrint('min=' + min + ', valueChanged=' + valueChanged);",
"}",
"",
"function setMax(inputValue, timeStamp)",
"{",
"\tmax = inputValue;",
"\tif (value > max) value = max;",
"",
"\tincrementInterval = (height - (2 * radius)) / (max - min);",
"\ttracePrint('incrementInterval=' + incrementInterval.toString());",
"",
"\tballPositionChanged = new SFVec3f(0, beginPosition.y + (incrementInterval * (value - min)), 0);",
"\tlastBallPosition = ballPositionChanged;",
"",
"\tvalueChanged = value;",
"\ttracePrint('max=' + max + ', valueChanged=' + valueChanged);",
"}",
"",
"function setValue(inputValue, timeStamp)",
"{",
"        if (inputValue <= min)",
"\t{",
"\t\tvalueChanged = value = min;",
"\t\tballPositionChanged = beginPosition;",
"\t\tlastBallPosition = ballPositionChanged;",
"\t}",
"\telse if (inputValue >= max)",
"\t{",
"\t\tvalueChanged = value = max;",
"\t\tballPositionChanged = endPosition;",
"\t\tlastBallPosition = ballPositionChanged;",
"\t}",
"\telse",
"\t{",
"\t\tif (inputValue > value) //getting bigger",
"\t\t{",
"\t\t\tballPositionChanged = new SFVec3f(0, lastBallPosition.y + (incrementInterval * (inputValue - value)), 0);",
"\t\t\tlastBallPosition = ballPositionChanged;",
"\t\t}",
"\t\telse if (inputValue < value) //getting smaller",
"\t\t{",
"\t\t\tballPositionChanged = new SFVec3f(0, lastBallPosition.y - (incrementInterval * (value - inputValue)), 0);",
"\t\t\tlastBallPosition = ballPositionChanged;",
"\t\t}",
"\t\tvalueChanged = value = inputValue;",
"\t}",
"\ttracePrint('valueChanged=' + valueChanged);",
"}",
"",
"function bottomEndTouched(inputValue, timeStamp)",
"{",
"\ttracePrint('bottomEndTouched(' + inputValue.toString() + ')');",
"\tif (inputValue == false) return; // ignore deselection",
"",
"\tif (value <= Math.round(value))",
"\t\tvalue = Math.round(value);",
"\telse",
"\t\tvalue = Math.round(value) + 1;",
"",
"\tpartialIncrement = incrementInterval * (valueChanged - (value - 1));",
"",
"\tif (value > min)",
"\t{",
"\t\tvalueChanged = --value;",
"\t\tif (partialIncrement != incrementInterval)",
"\t\t{",
"\t\t\tballPositionChanged = new SFVec3f(0, lastBallPosition.y - partialIncrement, 0);",
"\t\t\tpartialIncrement = incrementInterval;",
"\t\t}",
"\t\telse    ballPositionChanged = new SFVec3f(0, lastBallPosition.y - incrementInterval, 0);",
"\t\tlastBallPosition = ballPositionChanged;",
"\t}",
"}",
"",
"function topEndTouched(inputValue, timeStamp)",
"{",
"\ttracePrint('topEndTouched(' + inputValue.toString() + ')');",
"\tif (inputValue == false) return; // ignore deselection",
"",
"\tif (value < Math.round(value))",
"\t\tvalue = Math.round(value) - 1;",
"\telse    value = Math.round(value);",
"",
"\tpartialIncrement = incrementInterval * (value + 1 - valueChanged);",
"",
"\tif (value < max)",
"\t{",
"\t\tvalueChanged = ++value;",
"\t\tif (partialIncrement != incrementInterval)",
"\t\t{",
"\t\t\tballPositionChanged = new SFVec3f(0, lastBallPosition.y + partialIncrement, 0);",
"\t\t\tpartialIncrement = incrementInterval;",
"\t\t}",
"\t\telse    ballPositionChanged = new SFVec3f(0, lastBallPosition.y + incrementInterval, 0);",
"\t\tlastBallPosition = ballPositionChanged;",
"\t}",
"}",
"",
"function setBallPosition(inputValue, timeStamp)",
"{",
"\ttracePrint('setBallPosition(' + inputValue.toString() + ')');",
"",
"\tif (inputValue.y > lastBallPosition.y) // moving upwards",
"\t{",
"\t\tif (value >= max)",
"\t\t{",
"\t\t\tvalue = max;",
"\t\t\tlastBallPosition = endPosition;",
"\t\t}",
"\t\telse",
"\t\t{",
"\t\t\tvalue = (inputValue.y - beginPosition.y) * ((max - min) / (endPosition.y - beginPosition.y));",
"\t\t\tlastBallPosition = inputValue;",
"\t\t}",
"\t\tvalueChanged = value;",
"\t\tballPositionChanged = lastBallPosition;",
"\t}",
"\telse if (inputValue.y < lastBallPosition.y) // moving downwards",
"\t{",
"\t\tif (value <= min)",
"\t\t{",
"\t\t\tvalue = min;",
"\t\t\tlastBallPosition = beginPosition;",
"\t\t}",
"\t\telse",
"\t\t{",
"\t\t\tvalue = (inputValue.y - beginPosition.y) * ((max - min) / (endPosition.y - beginPosition.y));",
"\t\t\tlastBallPosition = inputValue;",
"\t\t}",
"\t\tvalueChanged = value;",
"\t\tballPositionChanged = lastBallPosition;",
"\t}",
"}",
"function tracePrint (text)",
"{",
"\tif (traceEnabled) Browser.print ('[SliderFloat SliderScript] ' + text + '\n');",
"}"
]
                                  }
                                },
                                { "ROUTE":
                                  {
                                    "@fromField":"translation_changed",
                                    "@fromNode":"SliderBallPlaneSensor",
                                    "@toField":"setBallPosition",
                                    "@toNode":"SliderScript"
                                  }
                                },
                                { "ROUTE":
                                  {
                                    "@fromField":"isActive",
                                    "@fromNode":"BottomEndSensor",
                                    "@toField":"bottomEndTouched",
                                    "@toNode":"SliderScript"
                                  }
                                },
                                { "ROUTE":
                                  {
                                    "@fromField":"isActive",
                                    "@fromNode":"TopEndSensor",
                                    "@toField":"topEndTouched",
                                    "@toNode":"SliderScript"
                                  }
                                },
                                { "ROUTE":
                                  {
                                    "@fromField":"minBallPositionChanged",
                                    "@fromNode":"SliderScript",
                                    "@toField":"set_minPosition",
                                    "@toNode":"SliderBallPlaneSensor"
                                  }
                                },
                                { "ROUTE":
                                  {
                                    "@fromField":"maxBallPositionChanged",
                                    "@fromNode":"SliderScript",
                                    "@toField":"set_maxPosition",
                                    "@toNode":"SliderBallPlaneSensor"
                                  }
                                },
                                { "ROUTE":
                                  {
                                    "@fromField":"bottomEndPositionChanged",
                                    "@fromNode":"SliderScript",
                                    "@toField":"set_translation",
                                    "@toNode":"BottomEndTransform"
                                  }
                                },
                                { "ROUTE":
                                  {
                                    "@fromField":"topEndPositionChanged",
                                    "@fromNode":"SliderScript",
                                    "@toField":"set_translation",
                                    "@toNode":"TopEndTransform"
                                  }
                                },
                                { "ROUTE":
                                  {
                                    "@fromField":"ballPositionChanged",
                                    "@fromNode":"SliderScript",
                                    "@toField":"set_translation",
                                    "@toNode":"SliderBallTransform"
                                  }
                                }
                              ]
                            }
                          },
                          { "Script":
                            {
                              "@DEF":"LayoutDirectionScript",
                              "field": [
                                {
                                  "@name":"direction",
                                  "@accessType":"initializeOnly",
                                  "@type":"SFString"
                                },
                                {
                                  "@name":"directionRotation",
                                  "@accessType":"outputOnly",
                                  "@type":"SFRotation"
                                },
                                {
                                  "@name":"traceEnabled",
                                  "@accessType":"initializeOnly",
                                  "@type":"SFBool"
                                }
                              ],
                              "IS": {
                                  "connect": [
                                    {
                                      "@nodeField":"direction",
                                      "@protoField":"layoutDirection"
                                    },
                                    {
                                      "@nodeField":"traceEnabled",
                                      "@protoField":"traceEnabled"
                                    }
                                  ]
                              },
                              "#sourceText":[
"ecmascript:",
"",
"function initialize ()",
"{",
"    if      ((direction=='vertical') || (direction=='Vertical') || (direction=='VERTICAL'))",
"    {",
"        directionRotation = new SFRotation(0, 0, 1, 0);",
"    }",
"    else if ((direction=='horizontal') || (direction=='Horizontal') || (direction=='HORIZONTAL'))",
"    {",
"        directionRotation = new SFRotation(0, 0, 1, -1.57);",
"    }",
"    else",
"    {",
"        Browser.print ('[SliderFloat LayoutDirectionScript] unrecognized direction: ' + direction + ', using vertical\n');",
"        directionRotation = new SFRotation(0, 0, 1, 0);",
"    }",
"    tracePrint ('direction=' + direction);",
"}",
"function tracePrint (text)",
"{",
"\tif (traceEnabled) Browser.print ('[SliderFloat LayoutDirectionScript] ' + text + '\n');",
"}"
]
                            }
                          },
                          { "ROUTE":
                            {
                              "@fromField":"directionRotation",
                              "@fromNode":"LayoutDirectionScript",
                              "@toField":"set_rotation",
                              "@toNode":"LayoutDirectionTransform"
                            }
                          }
                        ]
                      }
                    }
                  ]
              }
            }
          },
          {
            "#comment":"===================="
          },
          { "Anchor":
            {
              "@description":"SliderFloatExample",
              "@parameter":["target=_blank"],
              "@url":["SliderFloatExample.x3d","https://savage.nps.edu/Savage/Tools/Animation/SliderFloatExample.x3d","SliderFloatExample.wrl","https://savage.nps.edu/Savage/Tools/Animation/SliderFloatExample.wrl"],
              "-children":[
                { "Shape":
                  {
                    "-appearance":
                      { "Appearance":
                        {
                          "-material":
                            { "Material":
                              {
                                "@diffuseColor":[0,1,1],
                                "@emissiveColor":[0,1,1]
                              }
                            }
                        }
                      },
                    "-geometry":
                      { "Text":
                        {
                          "@string":["SliderFloatPrototype","is a Prototype definition file.","","To see an example scene","select this text and view","SliderFloatExample"],
                          "-fontStyle":
                            { "FontStyle":
                              {
                                "@justify":["MIDDLE","MIDDLE"],
                                "@size":0.8
                              }
                            }
                        }
                      }
                  }
                }
              ]
            }
          }
        ]
    }
  }
}