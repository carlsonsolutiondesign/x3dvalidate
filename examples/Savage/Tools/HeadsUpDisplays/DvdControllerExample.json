{ "X3D": {
    "encoding":"UTF-8",
    "@profile":"Immersive",
    "@version":"3.0",
    "@xsd:noNamespaceSchemaLocation":"http://www.web3d.org/specifications/x3d-3.0.xsd",
    "JSON schema":"http://www.web3d.org/specifications/x3d-3.3-JSONSchema.json",
    "head": {
        "meta": [
          {
            "@name":"title",
            "@content":"DvdControllerExample.x3d"
          },
          {
            "@name":"description",
            "@content":"Digital Virtual Display (DVD) Controller interface example to control a scenario's animation timing, defined using an ExternProtoDeclare for easy reuse."
          },
          {
            "@name":"creator",
            "@content":"Jane Wu, Don Brutzman"
          },
          {
            "@name":"created",
            "@content":"10 November 2001"
          },
          {
            "@name":"modified",
            "@content":"14 January 2014"
          },
          {
            "@name":"subject",
            "@content":"DvdController animation control"
          },
          {
            "@name":"identifier",
            "@content":"https://savage.nps.edu/Savage/Tools/HeadsUpDisplays/DvdControllerExample.x3d"
          },
          {
            "@name":"generator",
            "@content":"X3D-Edit 3.2, https://savage.nps.edu/X3D-Edit"
          },
          {
            "@name":"license",
            "@content":"../../license.html"
          },
          {
            "@name":"translated",
            "@content":"19 March 2017"
          },
          {
            "@name":"generator",
            "@content":"X3dToJson.xslt, http://www.web3d.org/x3d/stylesheets/X3dToJson.html"
          },
          {
            "@name":"warning",
            "@content":"An experimental version of X3D JSON encoding is used for this scene.  Status online at http://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
          }
        ]
    },
    "Scene": {
        "-children":[
          { "ExternProtoDeclare":
            {
              "@name":"DvdController",
              "@appinfo":"Digital Virtual Display (DVD) Controller Prototype is a heads=up display (HUD) to control animation timing",
              "@url":["DvdControllerPrototype.x3d#DvdController","../../../Savage/Tools/HeadsUpDisplays/DvdControllerPrototype.x3d#DvdController","https://savage.nps.edu/Savage/Tools/HeadsUpDisplays/DvdControllerPrototype.x3d#DvdController","DvdControllerPrototype.wrl#DvdController","../../../Savage/Tools/HeadsUpDisplays/DvdControllerPrototype.wrl#DvdController","https://savage.nps.edu/Savage/Tools/HeadsUpDisplays/DvdControllerPrototype.wrl#DvdController"],
              "field": [
                {
                  "@name":"description",
                  "@accessType":"initializeOnly",
                  "@appinfo":"Short description of what is animated by this DvdController.",
                  "@type":"SFString"
                },
                {
                  "@name":"playEnabled",
                  "@accessType":"initializeOnly",
                  "@appinfo":"Whether or not play mode is enabled including during startup.",
                  "@type":"SFBool"
                },
                {
                  "@name":"displayMode",
                  "@accessType":"initializeOnly",
                  "@appinfo":"Initializes how control buttons and slider are displayed. The control buttons include DIS control (i.e. Master Ghost Local) and Playback control (i.e. Reset to Start Fast Rewind Rewind Pause Play Fast Forward Reset to End). Possible values are (case sensitive): ALL DIS_ONLY PLAYBACK_ONLY SLIDER_ONLY DIS_PLAYBACK DIS_SLIDER PLAYBACK_SLIDER and NONE.",
                  "@type":"SFString"
                },
                {
                  "@name":"setDisplayMode",
                  "@accessType":"inputOnly",
                  "@appinfo":"Sets how control buttons and slider are displayed. The control buttons include DIS control (i.e. Master Ghost Local) and Playback control (i.e. Reset to Start Fast Rewind Rewind Pause Play Fast Forward Reset to End). Possible values are (case sensitive): ALL DIS_ONLY PLAYBACK_ONLY SLIDER_ONLY DIS_PLAYBACK DIS_SLIDER PLAYBACK_SLIDER and NONE.",
                  "@type":"SFString"
                },
                {
                  "@name":"buttonColor",
                  "@accessType":"initializeOnly",
                  "@appinfo":"Default button color.",
                  "@type":"SFColor"
                },
                {
                  "@name":"selectedButtonColor",
                  "@accessType":"initializeOnly",
                  "@appinfo":"Button color when selected by user.",
                  "@type":"SFColor"
                },
                {
                  "@name":"labelColor",
                  "@accessType":"initializeOnly",
                  "@appinfo":"Default label color.",
                  "@type":"SFColor"
                },
                {
                  "@name":"selectedLabelColor",
                  "@accessType":"initializeOnly",
                  "@appinfo":"Label color when selected by user.",
                  "@type":"SFColor"
                },
                {
                  "@name":"locationOffset",
                  "@accessType":"initializeOnly",
                  "@appinfo":"Modified screen location and distance (for size).",
                  "@type":"SFVec3f"
                },
                {
                  "@name":"clockEnabled",
                  "@accessType":"initializeOnly",
                  "@type":"SFBool"
                },
                {
                  "@name":"cycleInterval",
                  "@accessType":"initializeOnly",
                  "@appinfo":"Time for complete loop cycle in seconds.",
                  "@type":"SFTime"
                },
                {
                  "@name":"set_cycleInterval",
                  "@accessType":"inputOnly",
                  "@type":"SFTime"
                },
                {
                  "@name":"cycleInterval_changed",
                  "@accessType":"outputOnly",
                  "@type":"SFTime"
                },
                {
                  "@name":"speedFactor",
                  "@accessType":"initializeOnly",
                  "@appinfo":"Factor used to determine the speed increase/decrease for Fast Rewind and Fast Forward action.",
                  "@type":"SFFloat"
                },
                {
                  "@name":"isActive",
                  "@accessType":"outputOnly",
                  "@type":"SFBool"
                },
                {
                  "@name":"startTime_changed",
                  "@accessType":"outputOnly",
                  "@type":"SFTime"
                },
                {
                  "@name":"stopTime_changed",
                  "@accessType":"outputOnly",
                  "@type":"SFTime"
                },
                {
                  "@name":"time_changed",
                  "@accessType":"outputOnly",
                  "@type":"SFTime"
                },
                {
                  "@name":"fraction_changed",
                  "@accessType":"outputOnly",
                  "@type":"SFFloat"
                },
                {
                  "@name":"secondsElapsed",
                  "@accessType":"outputOnly",
                  "@type":"SFTime"
                },
                {
                  "@name":"isMaster",
                  "@accessType":"outputOnly",
                  "@appinfo":"isMaster isRemote and isLocal are booleans represent a 3-way toggle. Only one of them can have a true value at any time.",
                  "@type":"SFBool"
                },
                {
                  "@name":"isRemote",
                  "@accessType":"outputOnly",
                  "@appinfo":"isMaster isRemote and isLocal are booleans represent a 3-way toggle. Only one of them can have a true value at any time.",
                  "@type":"SFBool"
                },
                {
                  "@name":"isLocal",
                  "@accessType":"outputOnly",
                  "@appinfo":"isMaster isRemote and isLocal are booleans represent a 3-way toggle. Only one of them can have a true value at any time.",
                  "@type":"SFBool"
                },
                {
                  "@name":"isPaused",
                  "@accessType":"outputOnly",
                  "@appinfo":"isPaused and isRunning always have opposite values. When isPaused is true isRunning will be false and vice versa.",
                  "@type":"SFBool"
                },
                {
                  "@name":"isRunning",
                  "@accessType":"outputOnly",
                  "@appinfo":"isPaused and isRunning always have opposite values. When isPaused is true isRunning will be false and vice versa.",
                  "@type":"SFBool"
                },
                {
                  "@name":"traceEnabled",
                  "@accessType":"initializeOnly",
                  "@appinfo":"Enable/disable console output for troubleshooting.",
                  "@type":"SFBool"
                },
                {
                  "@name":"testTimeVal",
                  "@accessType":"initializeOnly",
                  "@type":"SFTime"
                }
              ]
            }
          },
          { "ExternProtoDeclare":
            {
              "@name":"SingleTypeConversion",
              "@appinfo":"SingleTypeConversion converts from a single typed value to various other types of values",
              "@url":["../../../Savage/Tools/Authoring/SingleTypeConversionPrototype.x3d#SingleTypeConversion","https://savage.nps.edu/Savage/Tools/Authoring/SingleTypeConversionPrototype.x3d#SingleTypeConversion","../../../Savage/Tools/Authoring/SingleTypeConversionPrototype.wrl#SingleTypeConversion","https://savage.nps.edu/Savage/Tools/Authoring/SingleTypeConversionPrototype.wrl#SingleTypeConversion"],
              "field": [
                {
                  "@name":"decimalPlaces",
                  "@accessType":"initializeOnly",
                  "@appinfo":"decimalPlaces is the number of significant digits after the decimal point. The -1 value indicates no round off.",
                  "@type":"SFInt32"
                },
                {
                  "@name":"setDecimalPlaces",
                  "@accessType":"inputOnly",
                  "@type":"SFInt32"
                },
                {
                  "@name":"BooleanValue",
                  "@accessType":"inputOnly",
                  "@type":"SFBool"
                },
                {
                  "@name":"FloatValue",
                  "@accessType":"inputOnly",
                  "@type":"SFFloat"
                },
                {
                  "@name":"IntegerValue",
                  "@accessType":"inputOnly",
                  "@type":"SFInt32"
                },
                {
                  "@name":"TimeValue",
                  "@accessType":"inputOnly",
                  "@type":"SFTime"
                },
                {
                  "@name":"BooleanResult",
                  "@accessType":"outputOnly",
                  "@type":"SFBool"
                },
                {
                  "@name":"FloatResult",
                  "@accessType":"outputOnly",
                  "@type":"SFFloat"
                },
                {
                  "@name":"IntegerResult",
                  "@accessType":"outputOnly",
                  "@type":"SFInt32"
                },
                {
                  "@name":"TimeResult",
                  "@accessType":"outputOnly",
                  "@type":"SFTime"
                },
                {
                  "@name":"StringResult",
                  "@accessType":"outputOnly",
                  "@type":"SFString"
                },
                {
                  "@name":"StringsResult",
                  "@accessType":"outputOnly",
                  "@type":"MFString"
                }
              ]
            }
          },
          {
            "#comment":"=============================="
          },
          { "Transform":
            {
              "-children":[
                { "ProtoInstance":
                  {
                    "@name":"DvdController",
                    "@DEF":"DvdControllerInterface",
                    "fieldValue": [
                      {
                        "@name":"displayMode",
                        "@value":"PLAYBACK_SLIDER"
                      },
                      {
                        "@name":"playEnabled",
                        "@value":true
                      },
                      {
                        "@name":"buttonColor",
                        "@value":[0.655,0.655,0.655]
                      },
                      {
                        "@name":"selectedButtonColor",
                        "@value":[0.675,0.675,0.675]
                      },
                      {
                        "@name":"selectedLabelColor",
                        "@value":[0.9,0,0]
                      },
                      {
                        "@name":"locationOffset",
                        "@value":[-5,-2,0]
                      },
                      {
                        "@name":"cycleInterval",
                        "@value":10
                      },
                      {
                        "@name":"speedFactor",
                        "@value":10.0
                      },
                      {
                        "@name":"traceEnabled",
                        "@value":true
                      }
                    ]
                  }
                }
              ]
            }
          },
          { "Transform":
            {
              "@translation":[-3,0,0],
              "-children":[
                { "Transform":
                  {
                    "@translation":[-5,3,-5],
                    "-children":[
                      { "Shape":
                        {
                          "-appearance":
                            { "Appearance":
                              {
                                "-material":
                                  { "Material":
                                    {
                                    }
                                  }
                              }
                            },
                          "-geometry":
                            { "Text":
                              {
                                "@string":["fraction_changed:"]
                              }
                            }
                        }
                      }
                    ]
                  }
                },
                { "Transform":
                  {
                    "@translation":[2,3,-5],
                    "-children":[
                      { "Shape":
                        {
                          "-appearance":
                            { "Appearance":
                              {
                                "-material":
                                  { "Material":
                                    {
                                    }
                                  }
                              }
                            },
                          "-geometry":
                            { "Text":
                              {
                                "@DEF":"FractionText",
                                "@string":["N/A"]
                              }
                            }
                        }
                      }
                    ]
                  }
                },
                { "Transform":
                  {
                    "@translation":[-5,2,-5],
                    "-children":[
                      { "Shape":
                        {
                          "-appearance":
                            { "Appearance":
                              {
                                "-material":
                                  { "Material":
                                    {
                                    }
                                  }
                              }
                            },
                          "-geometry":
                            { "Text":
                              {
                                "@string":["secondsElapsed:"]
                              }
                            }
                        }
                      }
                    ]
                  }
                },
                { "Transform":
                  {
                    "@translation":[2,2,-5],
                    "-children":[
                      { "Shape":
                        {
                          "-appearance":
                            { "Appearance":
                              {
                                "-material":
                                  { "Material":
                                    {
                                    }
                                  }
                              }
                            },
                          "-geometry":
                            { "Text":
                              {
                                "@DEF":"SecondsElapsedText",
                                "@string":["N/A"]
                              }
                            }
                        }
                      }
                    ]
                  }
                },
                { "Transform":
                  {
                    "@translation":[-5,1,-5],
                    "-children":[
                      { "Shape":
                        {
                          "-appearance":
                            { "Appearance":
                              {
                                "-material":
                                  { "Material":
                                    {
                                    }
                                  }
                              }
                            },
                          "-geometry":
                            { "Text":
                              {
                                "@DEF":"actual_time_changed",
                                "@string":["local clock time:"]
                              }
                            }
                        }
                      }
                    ]
                  }
                },
                { "Transform":
                  {
                    "@translation":[2,1,-5],
                    "-children":[
                      { "Shape":
                        {
                          "-appearance":
                            { "Appearance":
                              {
                                "-material":
                                  { "Material":
                                    {
                                    }
                                  }
                              }
                            },
                          "-geometry":
                            { "Text":
                              {
                                "@DEF":"TimeText",
                                "@string":["N/A"]
                              }
                            }
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          { "Script":
            {
              "@DEF":"TimeTextScript",
              "field": [
                {
                  "@name":"time",
                  "@accessType":"initializeOnly",
                  "@type":"SFTime",
                  "@value":-1
                },
                {
                  "@name":"setCurrentTime",
                  "@accessType":"inputOnly",
                  "@type":"SFTime"
                },
                {
                  "@name":"timeText",
                  "@accessType":"outputOnly",
                  "@type":"MFString"
                }
              ],
              "#sourceText":[
"ecmascript:",
"",
"function initialize ()",
"{",
"\ttracePrint('initialize () complete');",
"}",
"function setCurrentTime(value, timeStamp)",
"{",
"\ttracePrint('setCurrentTime(' + value + ')');",
"\tmyDate = new Date(); // value unused, causes BS Contact fatal error",
"        if (myDate == null)",
"        {",
"            Browser.print ('[DvdControllerExample TimeTextScript] setCurrentTime() error: class Date not supported\n');",
"            return;",
"        }",
"\tnumHour   = myDate.getHours();",
"\tnumMinute = myDate.getMinutes();",
"\tnumSecond = myDate.getSeconds();",
"",
"\tdate = myDate.getDate();",
"\tmonthNumber = myDate.getMonth();",
"\tyear = myDate.getYear() + 1900;",
"",
"\t// javascript switch statement is convenient but not consistently supported, so test the old-fashioned way:",
"        ",
"        if (monthNumber==0)",
"\t{",
"            monthText ='January';",
"\t}",
"        else if (monthNumber==1)",
"\t{",
"            monthText ='February';",
"\t}",
"        else if (monthNumber==2)",
"\t{",
"            monthText ='March';",
"\t}",
"        else if (monthNumber==3)",
"\t{",
"            monthText ='April';",
"\t}",
"        else if (monthNumber==4)",
"\t{",
"            monthText ='May';",
"\t}",
"        else if (monthNumber==5)",
"\t{",
"            monthText ='June';",
"\t}",
"        else if (monthNumber==6)",
"\t{",
"            monthText ='July';",
"\t}",
"        else if (monthNumber==7)",
"\t{",
"            monthText ='August';",
"\t}",
"        else if (monthNumber==8)",
"\t{",
"            monthText ='September';",
"\t}",
"        else if (monthNumber==9)",
"\t{",
"            monthText ='October';",
"\t}",
"        else if (monthNumber==10)",
"\t{",
"            monthText ='November';",
"\t}",
"        else if (monthNumber==11)",
"\t{",
"            monthText ='December';",
"\t}",
"        else",
"\t{",
"            monthText ='(illegal month index)';",
"        }",
"",
"\tif (numHour < 10)",
"\t\thour ='0' + numHour;",
"\telse",
"\t\thour = numHour;",
"",
"\tif (numMinute < 10)",
"\t\tminute ='0' + numMinute;",
"\telse",
"\t\tminute = numMinute;",
"",
"\tnumSecond = Math.round(numSecond * 1000.0) / 1000.0;",
"\tif (numSecond < 10)",
"\t\tsecond ='0' + numSecond;",
"\telse",
"\t\tsecond = numSecond;",
"\ttext = hour + ':' + minute + ':' + second + ', ' + date + ' ' + monthText + ' ' + year;",
"\ttimeText = new MFString(text);",
"        //deprecated\ttimeText = new MFString(myDate.toGMTString());",
"",
"        tracePrint ('timeText=' + timeText.toString());",
"}",
"function tracePrint (text)",
"{",
"\tif (true) Browser.print ('[DvdControllerExample TimeTextScript] ' + text + '\n');",
"}"
]
            }
          },
          { "ROUTE":
            {
              "@fromField":"time_changed",
              "@fromNode":"DvdControllerInterface",
              "@toField":"setCurrentTime",
              "@toNode":"TimeTextScript"
            }
          },
          { "ROUTE":
            {
              "@fromField":"timeText",
              "@fromNode":"TimeTextScript",
              "@toField":"set_string",
              "@toNode":"TimeText"
            }
          },
          { "ProtoInstance":
            {
              "@name":"SingleTypeConversion",
              "@DEF":"FractionConverter",
              "fieldValue": [
                {
                  "@name":"decimalPlaces",
                  "@value":2
                }
              ]
            }
          },
          { "ROUTE":
            {
              "@fromField":"fraction_changed",
              "@fromNode":"DvdControllerInterface",
              "@toField":"FloatValue",
              "@toNode":"FractionConverter"
            }
          },
          { "ROUTE":
            {
              "@fromField":"StringsResult",
              "@fromNode":"FractionConverter",
              "@toField":"set_string",
              "@toNode":"FractionText"
            }
          },
          { "ProtoInstance":
            {
              "@name":"SingleTypeConversion",
              "@DEF":"SecondsConverter",
              "fieldValue": [
                {
                  "@name":"decimalPlaces",
                  "@value":2
                }
              ]
            }
          },
          { "ROUTE":
            {
              "@fromField":"secondsElapsed",
              "@fromNode":"DvdControllerInterface",
              "@toField":"TimeValue",
              "@toNode":"SecondsConverter"
            }
          },
          { "ROUTE":
            {
              "@fromField":"StringsResult",
              "@fromNode":"SecondsConverter",
              "@toField":"set_string",
              "@toNode":"SecondsElapsedText"
            }
          }
        ]
    }
  }
}