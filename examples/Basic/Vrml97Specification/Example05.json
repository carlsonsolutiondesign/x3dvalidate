{ "X3D": {
    "encoding":"UTF-8",
    "@profile":"Immersive",
    "@version":"3.0",
    "@xsd:noNamespaceSchemaLocation":"http://www.web3d.org/specifications/x3d-3.0.xsd",
    "JSON schema":"http://www.web3d.org/specifications/x3d-3.3-JSONSchema.json",
    "head": {
        "meta": [
          {
            "@name":"title",
            "@content":"Example05.x3d"
          },
          {
            "@name":"creator",
            "@content":"Don Brutzman"
          },
          {
            "@name":"created",
            "@content":"24 May 2000"
          },
          {
            "@name":"modified",
            "@content":"26 November 2015"
          },
          {
            "@name":"creator",
            "@content":"X3D working group"
          },
          {
            "@name":"description",
            "@content":"VRML 97 specification example: This Script node decides whether or not to open a bank vault given openVault and combinationEntered messages. To do this, it remembers whether or not the correct combination has been entered. The Script node combined with a Sphere, a TouchSensor and a Sound node to show how is works. When the pointing device is over the sphere, the combinationEntered eventIn of the Script is sent. Then, when the Sphere is touched (typically when the mouse button is pressed) the Script is sent the openVault eventIn. This generates the vaultUnlocked eventOut which starts a 'click' sound."
          },
          {
            "@name":"specificationUrl",
            "@content":"originals/exampleD_5.wrl"
          },
          {
            "@name":"specificationSection",
            "@content":"VRML 97, ISO/IEC 14772-1, Part 1: Functional specification and UTF-8 encoding, D.5 Scripting example"
          },
          {
            "@name":"specificationUrl",
            "@content":"http://www.web3d.org/documents/specifications/14772/V2.0/part1/examples.html#D.5"
          },
          {
            "@name":"identifier",
            "@content":"http://www.web3d.org/x3d/content/examples/Basic/Vrml97Specification/Example05.x3d"
          },
          {
            "@name":"generator",
            "@content":"X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"
          },
          {
            "@name":"license",
            "@content":"../license.html"
          },
          {
            "@name":"translated",
            "@content":"19 March 2017"
          },
          {
            "@name":"generator",
            "@content":"X3dToJson.xslt, http://www.web3d.org/x3d/stylesheets/X3dToJson.html"
          },
          {
            "@name":"warning",
            "@content":"An experimental version of X3D JSON encoding is used for this scene.  Status online at http://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
          }
        ]
    },
    "Scene": {
        "-children":[
          {
            "#comment":"Warning: VRML97-style scripting, not X3D Scene Authoring Interface (SAI)"
          },
          { "Script":
            {
              "@DEF":"OpenVault",
              "-children":[
                {
                  "#comment":"field tags are declarations of what interfaces are in this Script node"
                }
              ],
              "field": [
                {
                  "@name":"openVault",
                  "@accessType":"inputOnly",
                  "@type":"SFTime"
                },
                {
                  "@name":"combinationEntered",
                  "@accessType":"inputOnly",
                  "@type":"SFBool"
                },
                {
                  "@name":"vaultUnlocked",
                  "@accessType":"outputOnly",
                  "@type":"SFTime"
                },
                {
                  "@name":"unlocked",
                  "@accessType":"initializeOnly",
                  "@type":"SFBool",
                  "@value":false
                }
              ],
              "#sourceText":[
"ecmascript:",
"function combinationEntered (value)",
"{",
"\tunlocked = value;",
"}",
"function openVault(value)",
"{",
"\tif (unlocked) vaultUnlocked = value;",
"}"
]
            }
          },
          { "Shape":
            {
              "-appearance":
                { "Appearance":
                  {
                    "-material":
                      { "Material":
                        {
                          "@diffuseColor":[1,0,0]
                        }
                      }
                  }
                },
              "-geometry":
                { "Sphere":
                  {
                  }
                }
            }
          },
          { "Sound":
            {
              "@maxBack":1000,
              "@maxFront":1000,
              "@minBack":1000,
              "@minFront":1000,
              "-source":
                { "AudioClip":
                  {
                    "@DEF":"Click",
                    "@description":"click",
                    "@stopTime":1,
                    "@url":["click.wav","http://www.web3d.org/x3d/content/examples/Basic/Vrml97Specification/click.wav"]
                  }
                }
            }
          },
          { "TouchSensor":
            {
              "@DEF":"TS",
              "@description":"touch ball to hear a click"
            }
          },
          { "ROUTE":
            {
              "@fromField":"isOver",
              "@fromNode":"TS",
              "@toField":"combinationEntered",
              "@toNode":"OpenVault"
            }
          },
          { "ROUTE":
            {
              "@fromField":"touchTime",
              "@fromNode":"TS",
              "@toField":"openVault",
              "@toNode":"OpenVault"
            }
          },
          { "ROUTE":
            {
              "@fromField":"vaultUnlocked",
              "@fromNode":"OpenVault",
              "@toField":"startTime",
              "@toNode":"Click"
            }
          }
        ]
    }
  }
}