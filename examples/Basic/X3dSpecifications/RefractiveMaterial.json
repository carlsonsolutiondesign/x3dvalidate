{ "X3D": {
    "encoding":"UTF-8",
    "@profile":"Immersive",
    "@version":"3.3",
    "@xsd:noNamespaceSchemaLocation":"http://www.web3d.org/specifications/x3d-3.3.xsd",
    "JSON schema":"http://www.web3d.org/specifications/x3d-3.3-JSONSchema.json",
    "head": {
        "meta": [
          {
            "@name":"title",
            "@content":"RefractiveMaterial.x3d"
          },
          {
            "@name":"description",
            "@content":"X3D encodings example: create new node RefractiveMaterial for example PrototypesPlus."
          },
          {
            "@name":"creators",
            "@content":"Don Brutzman and Joe Williams"
          },
          {
            "@name":"created",
            "@content":"1 June 2002"
          },
          {
            "@name":"modified",
            "@content":"26 November 2015"
          },
          {
            "@name":"reference",
            "@content":"PrototypesPlus.x3d"
          },
          {
            "@name":"specificationSection",
            "@content":"X3D encodings, ISO/IEC 19776-1.3, Part 1: XML encoding, Annex C.7 Prototypes and alternate representations"
          },
          {
            "@name":"specificationUrl",
            "@content":"http://www.web3d.org/documents/specifications/19776-1/V3.3/Part01/examples.html#PrototyesAndAlternateReps"
          },
          {
            "@name":"identifier",
            "@content":"http://www.web3d.org/x3d/content/examples/Basic/X3dSpecifications/RefractiveMaterial.x3d"
          },
          {
            "@name":"generator",
            "@content":"X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"
          },
          {
            "@name":"license",
            "@content":"../license.html"
          },
          {
            "@name":"translated",
            "@content":"19 March 2017"
          },
          {
            "@name":"generator",
            "@content":"X3dToJson.xslt, http://www.web3d.org/x3d/stylesheets/X3dToJson.html"
          },
          {
            "@name":"warning",
            "@content":"An experimental version of X3D JSON encoding is used for this scene.  Status online at http://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
          }
        ]
    },
    "Scene": {
        "-children":[
          {
            "#comment":"Protype definition for external use"
          },
          { "ProtoDeclare":
            {
              "@name":"RefractiveMaterial",
              "ProtoInterface": {
                  "field": [
                    {
                      "@name":"ambientIntensity",
                      "@accessType":"inputOutput",
                      "@type":"SFFloat",
                      "@value":0
                    },
                    {
                      "@name":"diffuseColor",
                      "@accessType":"inputOutput",
                      "@type":"SFColor",
                      "@value":[0.5,0.5,0.5]
                    },
                    {
                      "@name":"specularColor",
                      "@accessType":"inputOutput",
                      "@type":"SFColor",
                      "@value":[0,0,0]
                    },
                    {
                      "@name":"emissiveColor",
                      "@accessType":"inputOutput",
                      "@type":"SFColor",
                      "@value":[0,0,0]
                    },
                    {
                      "@name":"shininess",
                      "@accessType":"inputOutput",
                      "@type":"SFFloat",
                      "@value":0
                    },
                    {
                      "@name":"transparency",
                      "@accessType":"inputOutput",
                      "@type":"SFFloat",
                      "@value":0
                    },
                    {
                      "@name":"indexOfRefraction",
                      "@accessType":"inputOutput",
                      "@type":"SFFloat",
                      "@value":0.1
                    }
                  ]
              },
              "ProtoBody": {
                  "-children":[
                    { "Material":
                      {
                        "@DEF":"RefractiveMaterialNode",
                        "IS": {
                            "connect": [
                              {
                                "@nodeField":"ambientIntensity",
                                "@protoField":"ambientIntensity"
                              },
                              {
                                "@nodeField":"diffuseColor",
                                "@protoField":"diffuseColor"
                              },
                              {
                                "@nodeField":"specularColor",
                                "@protoField":"specularColor"
                              },
                              {
                                "@nodeField":"emissiveColor",
                                "@protoField":"emissiveColor"
                              },
                              {
                                "@nodeField":"shininess",
                                "@protoField":"shininess"
                              },
                              {
                                "@nodeField":"transparency",
                                "@protoField":"transparency"
                              }
                            ]
                        }
                      }
                    },
                    {
                      "#comment":"after first node in ProtoDeclare, remainder of nodes do not render"
                    },
                    { "Script":
                      {
                        "@DEF":"RefractionScript",
                        "field": [
                          {
                            "@name":"transparencyInitial",
                            "@accessType":"inputOutput",
                            "@type":"SFFloat"
                          },
                          {
                            "@name":"indexOfRefraction",
                            "@accessType":"inputOutput",
                            "@type":"SFFloat"
                          },
                          {
                            "@name":"transparency_changed",
                            "@accessType":"outputOnly",
                            "@type":"SFFloat"
                          }
                        ],
                        "IS": {
                            "connect": [
                              {
                                "@nodeField":"transparencyInitial",
                                "@protoField":"transparency"
                              },
                              {
                                "@nodeField":"indexOfRefraction",
                                "@protoField":"indexOfRefraction"
                              }
                            ]
                        },
                        "#sourceText":[
"ecmascript:",
"function initialize()",
"{",
"    // arbitary example modification of usual node properties",
"    ",
"    var newTransparency = 1.0 - ((1.0 - transparencyInitial) * indexOfRefraction);",
"    Browser.print ('indexOfRefraction=' + indexOfRefraction +",
"         ', transparencyInitial=' + transparencyInitial +",
"         ', transparency_changed=' + newTransparency);",
"    transparency_changed = newTransparency;",
"}",
"",
"function set_transparencyInitial (eventValue)",
"{",
"   // input eventValue received for inputOutput field",
"    transparencyInitial = eventValue;",
"}",
"",
"function set_indexOfRefraction (eventValue)",
"{",
"   // input eventValue received for inputOutput field",
"    indexOfRefraction = eventValue;",
"}"
]
                      }
                    },
                    { "ROUTE":
                      {
                        "@fromField":"transparency_changed",
                        "@fromNode":"RefractionScript",
                        "@toField":"transparency",
                        "@toNode":"RefractiveMaterialNode"
                      }
                    }
                  ]
              }
            }
          }
        ]
    }
  }
}