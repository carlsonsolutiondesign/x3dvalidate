{ "X3D": {
    "encoding":"UTF-8",
    "@profile":"Immersive",
    "@version":"3.3",
    "@xsd:noNamespaceSchemaLocation":"http://www.web3d.org/specifications/x3d-3.3.xsd",
    "JSON schema":"http://www.web3d.org/specifications/x3d-3.3-JSONSchema.json",
    "head": {
        "meta": [
          {
            "@name":"title",
            "@content":"ECMAScriptSaiCreateNodesFromPrototype.x3d"
          },
          {
            "@name":"description",
            "@content":"Java Scene Authoring Interface (JSAI) scene and source code example that show creation of nodes from a prototype."
          },
          {
            "@name":"creator",
            "@content":"X3D Working Group"
          },
          {
            "@name":"created",
            "@content":"23 February 2005"
          },
          {
            "@name":"modified",
            "@content":"26 November 2015"
          },
          {
            "@name":"reference",
            "@content":"http://www.web3d.org/files/specifications/19777-1/V3.3/Part1/X3D_ECMAScript.html"
          },
          {
            "@name":"specificationSection",
            "@content":"X3D language bindings, ISO/IEC 19777-1, Part 1: ECMAScript, B.6 Create nodes from a prototype"
          },
          {
            "@name":"specificationUrl",
            "@content":"http://www.web3d.org/files/specifications/19777-1/V3.3/Part1/examples.html#CreateNodesFromAPrototype"
          },
          {
            "@name":"generator",
            "@content":"X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"
          },
          {
            "@name":"identifier",
            "@content":"http://www.web3d.org/x3d/content/examples/Basic/X3dSpecifications/ECMAScriptSaiCreateNodesFromPrototype.x3d"
          },
          {
            "@name":"license",
            "@content":"../license.html"
          },
          {
            "@name":"translated",
            "@content":"19 March 2017"
          },
          {
            "@name":"generator",
            "@content":"X3dToJson.xslt, http://www.web3d.org/x3d/stylesheets/X3dToJson.html"
          },
          {
            "@name":"warning",
            "@content":"An experimental version of X3D JSON encoding is used for this scene.  Status online at http://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
          }
        ]
    },
    "Scene": {
        "-children":[
          { "ProtoDeclare":
            {
              "@name":"ColoredSphere",
              "ProtoInterface": {
                  "field": [
                    {
                      "@name":"color",
                      "@accessType":"initializeOnly",
                      "@type":"SFColor",
                      "@value":[0,1,0]
                    }
                  ]
              },
              "ProtoBody": {
                  "-children":[
                    { "Shape":
                      {
                        "-geometry":
                          { "Sphere":
                            {
                            }
                          },
                        "-appearance":
                          { "Appearance":
                            {
                              "-material":
                                { "Material":
                                  {
                                    "IS": {
                                        "connect": [
                                          {
                                            "@nodeField":"diffuseColor",
                                            "@protoField":"color"
                                          }
                                        ]
                                    }
                                  }
                                }
                            }
                          }
                      }
                    }
                  ]
              }
            }
          },
          { "Script":
            {
              "@DEF":"SC",
              "#sourceText":[
"ecmascript:",
"function initialize() {",
"    // Create nodes directly in the parent scene",
"    scene = Browser.currentScene;",
"",
"    // Look through proto declarations for ColoredSphere",
"    protoDecls = scene.protoDeclarations;",
"",
"    var protoDecl;",
"",
"    for(i=0; i < protoDecls.length; i++) {",
"        if (protoDecls[i].name == 'ColoredSphere')",
"            protoDecl = protoDecls[i];",
"    }",
"",
"    // Create an instance of RedSphere",
"    instance = protoDecl.newInstance();",
"",
"    // Set the color field to Red",
"    instance.color = new SFColor(1,0,0);",
"",
"    // Add the created proto to the scene",
"    scene.rootNodes[0] = instance;",
"}"
]
            }
          }
        ]
    }
  }
}