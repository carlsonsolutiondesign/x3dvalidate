{ "X3D": {
    "encoding":"UTF-8",
    "@profile":"Immersive",
    "@version":"3.0",
    "@xsd:noNamespaceSchemaLocation":"http://www.web3d.org/specifications/x3d-3.0.xsd",
    "JSON schema":"http://www.web3d.org/specifications/x3d-3.3-JSONSchema.json",
    "head": {
        "meta": [
          {
            "@name":"title",
            "@content":"Geometry2dComponentPrototypes.x3d"
          },
          {
            "@name":"description",
            "@content":"X3D Geometry2D component nodes, implemented as prototypes for developmental use to provide backwards compatibility with VRML 97. Arc2D specifies a 2D linear circular arc. ArcClose2D specifies a portion of a circle. Circle2D specifies a 2D circular line. Disk2D specifies a 2D circular disk. Polyline2D specifies 2D line segments. Polypoint2D specifies 2D point array. Rectangle2D specifies a 2D rectangle. TriangleSet2D specifies 2D triangles. 2D nodes are considered particularly helpful for CADPart geometry and building user interfaces such as Heads-Up Displays (HUDs)."
          },
          {
            "@name":"creator",
            "@content":"Christos Kalogrias, Don Brutzman, Ken Curtin, Duane Davis"
          },
          {
            "@name":"created",
            "@content":"14 November 2003"
          },
          {
            "@name":"modified",
            "@content":"30 June 2016"
          },
          {
            "@name":"warning",
            "@content":"These examples are complete but only used for developmental testing, not regular X3D authoring."
          },
          {
            "@name":"reference",
            "@content":"Geometry2dComponentExternProtos.x3d"
          },
          {
            "@name":"reference",
            "@content":"Geometry2dComponentExamples.x3d"
          },
          {
            "@name":"reference",
            "@content":"http://www.web3d.org/documents/specifications/19775-1/V3.3/Part01/components/geometry2D.html"
          },
          {
            "@name":"subject",
            "@content":"Geometry2D component nodes (Arc2D ArcClose2D Circle2D Disk2D Polyline2D Polypoint2D Rectangle2D TriangleSet2D)"
          },
          {
            "@name":"identifier",
            "@content":"http://www.web3d.org/x3d/content/examples/Basic/development/Geometry2dComponentPrototypes.x3d"
          },
          {
            "@name":"generator",
            "@content":"X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"
          },
          {
            "@name":"license",
            "@content":"../license.html"
          },
          {
            "@name":"translated",
            "@content":"19 March 2017"
          },
          {
            "@name":"generator",
            "@content":"X3dToJson.xslt, http://www.web3d.org/x3d/stylesheets/X3dToJson.html"
          },
          {
            "@name":"warning",
            "@content":"An experimental version of X3D JSON encoding is used for this scene.  Status online at http://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
          }
        ]
    },
    "Scene": {
        "-children":[
          {
            "#comment":"===================="
          },
          { "ProtoDeclare":
            {
              "@name":"Arc2D",
              "ProtoInterface": {
                  "field": [
                    {
                      "@name":"startAngle",
                      "@accessType":"initializeOnly",
                      "@type":"SFFloat",
                      "@value":0
                    },
                    {
                      "@name":"endAngle",
                      "@accessType":"initializeOnly",
                      "@type":"SFFloat",
                      "@value":1.5707963265
                    },
                    {
                      "@name":"radius",
                      "@accessType":"initializeOnly",
                      "@type":"SFFloat",
                      "@value":1
                    },
                    {
                      "@name":"metadata",
                      "@accessType":"inputOutput",
                      "@appinfo":"Metadata node only",
                      "@type":"SFNode",
                      "-children":[
                        {
                          "#comment":"default NULL"
                        }
                      ]
                    }
                  ]
              },
              "ProtoBody": {
                  "-children":[
                    {
                      "#comment":"Only the first node counts as the node type of a prototype. This node must be a geometry node."
                    },
                    { "IndexedLineSet":
                      {
                        "@DEF":"ArcIndexPoints",
                        "-coord":
                          { "Coordinate":
                            {
                              "@DEF":"Arc3DPoints"
                            }
                          }
                      }
                    },
                    {
                      "#comment":"Any nodes after initial node in a ProtoBody is not rendered."
                    },
                    { "Group":
                      {
                        "IS": {
                            "connect": [
                              {
                                "@nodeField":"metadata",
                                "@protoField":"metadata"
                              }
                            ]
                        },
                        "-children":[
                          { "Script":
                            {
                              "@DEF":"Arc2dToFaceSet3d",
                              "field": [
                                {
                                  "@name":"startAngle",
                                  "@accessType":"initializeOnly",
                                  "@type":"SFFloat"
                                },
                                {
                                  "@name":"endAngle",
                                  "@accessType":"initializeOnly",
                                  "@type":"SFFloat"
                                },
                                {
                                  "@name":"radius",
                                  "@accessType":"initializeOnly",
                                  "@type":"SFFloat"
                                },
                                {
                                  "@name":"arcSet3d",
                                  "@accessType":"outputOnly",
                                  "@type":"MFVec3f"
                                },
                                {
                                  "@name":"arcIndexSet3d",
                                  "@accessType":"outputOnly",
                                  "@type":"MFInt32"
                                }
                              ],
                              "IS": {
                                  "connect": [
                                    {
                                      "@nodeField":"startAngle",
                                      "@protoField":"startAngle"
                                    },
                                    {
                                      "@nodeField":"endAngle",
                                      "@protoField":"endAngle"
                                    },
                                    {
                                      "@nodeField":"radius",
                                      "@protoField":"radius"
                                    }
                                  ]
                              },
                              "#sourceText":[
"ecmascript:",
"",
"function initialize()",
"{",
"   numOfPoints = 100;",
"",
"   if (radius < 0)",
"   {",
"      Browser.print ('[Arc2D] Warning:  invalid value, radius=' + value + ' must instead be >= 0');",
"   }",
"",
"   if ((startAngle < 0) || (startAngle >= 2 * Math.PI))",
"   {",
"\tBrowser.print ('[Arc2D] Warning: startAngle=' + startAngle + ' must be within range [0..2pi)'); // (]",
"   }",
"",
"   if ((endAngle < 0) || (endAngle >= 2 * Math.PI))",
"   {",
"\tBrowser.print ('[Arc2D] Warning: endAngle=' + endAngle + ' must be within range [0..2pi)'); // (]",
"   }",
"",
"   // equal startAngle, endAngle means draw full circle.",
"   // high out-of-range endAngle is OK for local computation.",
"   if (startAngle >= endAngle)",
"      endAngle = endAngle + 2 * Math.PI;",
"",
"   differAng = Math.abs((endAngle - startAngle)) / numOfPoints;",
"",
"   for (i = 0; i <= numOfPoints; i++)",
"   {",
"\tarcSet3d[i] = new SFVec3f (radius * Math.cos(startAngle + i * differAng), radius * Math.sin(startAngle + i * differAng), 0.0);",
"        arcIndexSet3d[i] = i;",
"   }",
"",
"} // initialize"
]
                            }
                          },
                          { "ROUTE":
                            {
                              "@fromField":"arcSet3d",
                              "@fromNode":"Arc2dToFaceSet3d",
                              "@toField":"point",
                              "@toNode":"Arc3DPoints"
                            }
                          },
                          { "ROUTE":
                            {
                              "@fromField":"arcIndexSet3d",
                              "@fromNode":"Arc2dToFaceSet3d",
                              "@toField":"set_coordIndex",
                              "@toNode":"ArcIndexPoints"
                            }
                          }
                        ]
                      }
                    }
                  ]
              }
            }
          },
          {
            "#comment":"===================="
          },
          { "ProtoDeclare":
            {
              "@name":"ArcClose2D",
              "ProtoInterface": {
                  "field": [
                    {
                      "@name":"startAngle",
                      "@accessType":"initializeOnly",
                      "@type":"SFFloat",
                      "@value":0
                    },
                    {
                      "@name":"endAngle",
                      "@accessType":"initializeOnly",
                      "@type":"SFFloat",
                      "@value":1.5707963265
                    },
                    {
                      "@name":"radius",
                      "@accessType":"initializeOnly",
                      "@type":"SFFloat",
                      "@value":1
                    },
                    {
                      "@name":"closureType",
                      "@accessType":"initializeOnly",
                      "@type":"SFString",
                      "@value":"PIE"
                    },
                    {
                      "@name":"solid",
                      "@accessType":"initializeOnly",
                      "@type":"SFBool",
                      "@value":false
                    },
                    {
                      "@name":"metadata",
                      "@accessType":"inputOutput",
                      "@appinfo":"Metadata node only",
                      "@type":"SFNode",
                      "-children":[
                        {
                          "#comment":"default NULL"
                        }
                      ]
                    }
                  ]
              },
              "ProtoBody": {
                  "-children":[
                    { "IndexedFaceSet":
                      {
                        "@DEF":"ArcPointFaceIndex",
                        "-coord":
                          { "Coordinate":
                            {
                              "@DEF":"ArcClose2DFaceCoordinate"
                            }
                          }
                      }
                    },
                    { "Group":
                      {
                        "-children":[
                          { "Script":
                            {
                              "@DEF":"ArcClose2dToFaceSet3d",
                              "field": [
                                {
                                  "@name":"closureType",
                                  "@accessType":"initializeOnly",
                                  "@type":"SFString"
                                },
                                {
                                  "@name":"startAngle",
                                  "@accessType":"initializeOnly",
                                  "@type":"SFFloat"
                                },
                                {
                                  "@name":"endAngle",
                                  "@accessType":"initializeOnly",
                                  "@type":"SFFloat"
                                },
                                {
                                  "@name":"radius",
                                  "@accessType":"initializeOnly",
                                  "@type":"SFFloat"
                                },
                                {
                                  "@name":"arcSet3d",
                                  "@accessType":"outputOnly",
                                  "@type":"MFVec3f"
                                },
                                {
                                  "@name":"pointIndex",
                                  "@accessType":"outputOnly",
                                  "@type":"MFInt32"
                                }
                              ],
                              "IS": {
                                  "connect": [
                                    {
                                      "@nodeField":"closureType",
                                      "@protoField":"closureType"
                                    },
                                    {
                                      "@nodeField":"startAngle",
                                      "@protoField":"startAngle"
                                    },
                                    {
                                      "@nodeField":"endAngle",
                                      "@protoField":"endAngle"
                                    },
                                    {
                                      "@nodeField":"radius",
                                      "@protoField":"radius"
                                    }
                                  ]
                              },
                              "#sourceText":[
"ecmascript:",
"",
"function initialize()",
"{",
"   if (radius < 0)",
"   {",
"      Browser.print ('[ArcClose2D] Warning:  invalid value, radius=' + value + ' must instead be >= 0');",
"   }",
"",
"   if ((startAngle < 0) || (startAngle >= 2 * Math.PI))",
"   {",
"\tBrowser.print ('[ArcClose2D] Warning: startAngle=' + startAngle + ' must be within range [0..2pi)'); //(]",
"   }",
"",
"   if ((endAngle< 0) || (endAngle>= 2 * Math.PI))",
"   {",
"\tBrowser.print ('[ArcClose2D] Warning: endAngle=' + endAngle+ ' must be within range [0..2pi)'); // (]",
"    }",
"",
"    // equal startAngle, endAngle means draw full circle.",
"    // high out-of-range endAngle is OK for local computation.",
"   if (startAngle >= endAngle)",
"      endAngle = endAngle + 2*Math.PI;",
"",
"   numOfPoints = 100;",
"   differAng = Math.abs((endAngle - startAngle))/numOfPoints;",
"",
"   for ( i=0 ; i<=numOfPoints ; i++)",
"   {",
"\tif ( i == numOfPoints)",
"             arcSet3d[i] = new SFVec3f (0.0, 0.0, 0.0);",
"        else",
"             arcSet3d[i] = new SFVec3f ( radius*Math.cos(startAngle + i*differAng), radius*Math.sin(startAngle + i*differAng), 0.0 );",
"   }",
"",
"   k=0;",
"   if (closureType =='PIE')",
"       for ( i=0 ; i<numOfPoints ; i++)",
"       {",
"        \tpointIndex[k]   = numOfPoints;",
"        \tpointIndex[k+1] = i;",
"        \tpointIndex[k+2] = i + 1;",
"        \tpointIndex[k+3]   = numOfPoints;",
"        \tpointIndex[k+4] = -1;",
"        k=k+5;",
"\t}",
"   else",
"       for ( i=0 ; i<numOfPoints-1 ; i++)",
"       {",
"              pointIndex[k]   = 0;",
"              pointIndex[k+1] = i;",
"              pointIndex[k+2] = i + 1;",
"              pointIndex[k+3]   = 0;",
"              pointIndex[k+4] = -1;",
"        k=k+5;",
"\t}",
"",
"} // initialize"
]
                            }
                          },
                          { "ROUTE":
                            {
                              "@fromField":"arcSet3d",
                              "@fromNode":"ArcClose2dToFaceSet3d",
                              "@toField":"point",
                              "@toNode":"ArcClose2DFaceCoordinate"
                            }
                          },
                          { "ROUTE":
                            {
                              "@fromField":"pointIndex",
                              "@fromNode":"ArcClose2dToFaceSet3d",
                              "@toField":"set_coordIndex",
                              "@toNode":"ArcPointFaceIndex"
                            }
                          }
                        ]
                      }
                    }
                  ]
              }
            }
          },
          {
            "#comment":"ArcClose2DUnfilled also provided since FillProperties not available in VRML 97"
          },
          { "ProtoDeclare":
            {
              "@name":"ArcClose2DUnfilled",
              "ProtoInterface": {
                  "field": [
                    {
                      "@name":"startAngle",
                      "@accessType":"initializeOnly",
                      "@type":"SFFloat",
                      "@value":0
                    },
                    {
                      "@name":"endAngle",
                      "@accessType":"initializeOnly",
                      "@type":"SFFloat",
                      "@value":1.5707963265
                    },
                    {
                      "@name":"radius",
                      "@accessType":"initializeOnly",
                      "@type":"SFFloat",
                      "@value":1
                    },
                    {
                      "@name":"closureType",
                      "@accessType":"initializeOnly",
                      "@type":"SFString",
                      "@value":"PIE"
                    },
                    {
                      "@name":"solid",
                      "@accessType":"initializeOnly",
                      "@type":"SFBool",
                      "@value":false
                    },
                    {
                      "@name":"metadata",
                      "@accessType":"inputOutput",
                      "@appinfo":"Metadata node only",
                      "@type":"SFNode",
                      "-children":[
                        {
                          "#comment":"default NULL"
                        }
                      ]
                    }
                  ]
              },
              "ProtoBody": {
                  "-children":[
                    { "IndexedLineSet":
                      {
                        "@DEF":"ArcPointLineIndex",
                        "-coord":
                          { "Coordinate":
                            {
                              "@DEF":"ArcClose2DLineCoordinate"
                            }
                          }
                      }
                    },
                    { "Group":
                      {
                        "-children":[
                          { "Script":
                            {
                              "@DEF":"ArcClose2dToLineSet3d",
                              "field": [
                                {
                                  "@name":"closureType",
                                  "@accessType":"initializeOnly",
                                  "@type":"SFString"
                                },
                                {
                                  "@name":"startAngle",
                                  "@accessType":"initializeOnly",
                                  "@type":"SFFloat"
                                },
                                {
                                  "@name":"endAngle",
                                  "@accessType":"initializeOnly",
                                  "@type":"SFFloat"
                                },
                                {
                                  "@name":"radius",
                                  "@accessType":"initializeOnly",
                                  "@type":"SFFloat"
                                },
                                {
                                  "@name":"arcSet3d",
                                  "@accessType":"outputOnly",
                                  "@type":"MFVec3f"
                                },
                                {
                                  "@name":"pointIndex",
                                  "@accessType":"outputOnly",
                                  "@type":"MFInt32"
                                }
                              ],
                              "IS": {
                                  "connect": [
                                    {
                                      "@nodeField":"closureType",
                                      "@protoField":"closureType"
                                    },
                                    {
                                      "@nodeField":"startAngle",
                                      "@protoField":"startAngle"
                                    },
                                    {
                                      "@nodeField":"endAngle",
                                      "@protoField":"endAngle"
                                    },
                                    {
                                      "@nodeField":"radius",
                                      "@protoField":"radius"
                                    }
                                  ]
                              },
                              "#sourceText":[
"ecmascript:",
"",
"function initialize()",
"{",
"",
"   if (radius < 0)",
"   {",
"      Browser.print ('[ArcCloseUnfilled2D] Warning:  invalid value, radius=' + value + ' must instead be >= 0');",
"   }",
"",
"   if ((startAngle < 0) || (startAngle >= 2 * Math.PI))",
"   {",
"\tBrowser.print ('[ArcCloseUnfilled2D] Warning: startAngle=' + startAngle + ' must be within range [0..2pi)'); //(]",
"   }",
"",
"   if ((endAngle< 0) || (endAngle>= 2 * Math.PI))",
"   {",
"\tBrowser.print ('[ArcCloseUnfilled2D] Warning: endAngle=' + endAngle+ ' must be within range [0..2pi)'); //(]",
"    }",
"",
"    // equal startAngle, endAngle means draw full circle.",
"    // high out-of-range endAngle is OK for local computation.",
"   if (startAngle >= endAngle)",
"      endAngle = endAngle + 2*Math.PI;",
"",
"   numOfPoints = 100;",
"   differAng = Math.abs((endAngle - startAngle))/numOfPoints;",
"",
"   for ( i=0 ; i<=numOfPoints +1 ; i++)",
"   {",
"\tif ( i == numOfPoints +1)",
"             arcSet3d[i] = new SFVec3f (0.0, 0.0, 0.0);",
"        else",
"             arcSet3d[i] = new SFVec3f ( radius*Math.cos(startAngle + i*differAng), radius*Math.sin(startAngle + i*differAng), 0.0 );",
"   }",
"",
"   if (closureType =='CHORD')",
"   {",
"\tfor ( i=0 ; i<=numOfPoints +1 ; i++)",
"\t{",
"        \tif ( i == numOfPoints +1)",
"             \t\tpointIndex[i] = 0.0;",
"        \telse",
"             \t\tpointIndex[i] = i;",
"\t}",
"   }",
"   else",
"   {",
"\tfor ( i=0 ; i<=numOfPoints +1 ; i++)",
"\t{",
"         pointIndex[i] = i;",
"\t}",
"         pointIndex[i] = 0.0;",
"   }",
"",
"} // initialize"
]
                            }
                          },
                          { "ROUTE":
                            {
                              "@fromField":"arcSet3d",
                              "@fromNode":"ArcClose2dToLineSet3d",
                              "@toField":"point",
                              "@toNode":"ArcClose2DLineCoordinate"
                            }
                          },
                          { "ROUTE":
                            {
                              "@fromField":"pointIndex",
                              "@fromNode":"ArcClose2dToLineSet3d",
                              "@toField":"set_coordIndex",
                              "@toNode":"ArcPointLineIndex"
                            }
                          }
                        ]
                      }
                    }
                  ]
              }
            }
          },
          {
            "#comment":"===================="
          },
          { "ProtoDeclare":
            {
              "@name":"Circle2D",
              "ProtoInterface": {
                  "field": [
                    {
                      "@name":"radius",
                      "@accessType":"initializeOnly",
                      "@type":"SFFloat",
                      "@value":1
                    },
                    {
                      "@name":"solid",
                      "@accessType":"initializeOnly",
                      "@type":"SFBool",
                      "@value":false
                    },
                    {
                      "@name":"metadata",
                      "@accessType":"inputOutput",
                      "@appinfo":"Metadata node only",
                      "@type":"SFNode",
                      "-children":[
                        {
                          "#comment":"default NULL"
                        }
                      ]
                    }
                  ]
              },
              "ProtoBody": {
                  "-children":[
                    { "IndexedLineSet":
                      {
                        "@DEF":"Circ3DPointsIndex",
                        "-coord":
                          { "Coordinate":
                            {
                              "@DEF":"Circ3DPoints"
                            }
                          }
                      }
                    },
                    { "Group":
                      {
                        "-children":[
                          { "Script":
                            {
                              "@DEF":"Circ2dToLineSet3d",
                              "field": [
                                {
                                  "@name":"radius",
                                  "@accessType":"initializeOnly",
                                  "@type":"SFFloat"
                                },
                                {
                                  "@name":"circSet3d",
                                  "@accessType":"outputOnly",
                                  "@type":"MFVec3f"
                                },
                                {
                                  "@name":"circIndexSet3d",
                                  "@accessType":"outputOnly",
                                  "@type":"MFInt32"
                                }
                              ],
                              "IS": {
                                  "connect": [
                                    {
                                      "@nodeField":"radius",
                                      "@protoField":"radius"
                                    }
                                  ]
                              },
                              "#sourceText":[
"ecmascript:",
"",
"function initialize()",
"{",
"    if (radius < 0)",
"   {",
"      Browser.print ('[Circle2D] Warning:  invalid value, radius=' + value + ' must instead be >= 0');",
"   }",
"",
"",
"   numOfPoints = 100;",
"   differAng = 2*Math.PI/numOfPoints;",
"",
"   for ( i=0 ; i<=numOfPoints ; i++)",
"   {",
"\tcircSet3d[i] = new SFVec3f ( radius*Math.cos(i*differAng), radius*Math.sin(i*differAng), 0.0 );",
"        circIndexSet3d[i] = i;",
"   }",
"",
"} // initialize"
]
                            }
                          },
                          { "ROUTE":
                            {
                              "@fromField":"circSet3d",
                              "@fromNode":"Circ2dToLineSet3d",
                              "@toField":"point",
                              "@toNode":"Circ3DPoints"
                            }
                          },
                          { "ROUTE":
                            {
                              "@fromField":"circIndexSet3d",
                              "@fromNode":"Circ2dToLineSet3d",
                              "@toField":"set_coordIndex",
                              "@toNode":"Circ3DPointsIndex"
                            }
                          }
                        ]
                      }
                    }
                  ]
              }
            }
          },
          {
            "#comment":"===================="
          },
          { "ProtoDeclare":
            {
              "@name":"Disk2D",
              "ProtoInterface": {
                  "field": [
                    {
                      "@name":"innerRadius",
                      "@accessType":"initializeOnly",
                      "@type":"SFFloat",
                      "@value":0
                    },
                    {
                      "@name":"outerRadius",
                      "@accessType":"initializeOnly",
                      "@type":"SFFloat",
                      "@value":1
                    },
                    {
                      "@name":"solid",
                      "@accessType":"initializeOnly",
                      "@type":"SFBool",
                      "@value":false
                    },
                    {
                      "@name":"metadata",
                      "@accessType":"inputOutput",
                      "@appinfo":"Metadata node only",
                      "@type":"SFNode",
                      "-children":[
                        {
                          "#comment":"default NULL"
                        }
                      ]
                    }
                  ]
              },
              "ProtoBody": {
                  "-children":[
                    { "IndexedFaceSet":
                      {
                        "@DEF":"DiskPointsIndex",
                        "-coord":
                          { "Coordinate":
                            {
                              "@DEF":"Disk3DPoints"
                            }
                          }
                      }
                    },
                    { "Group":
                      {
                        "-children":[
                          { "Script":
                            {
                              "@DEF":"Disk2dToFaceSet3d",
                              "field": [
                                {
                                  "@name":"innerRadius",
                                  "@accessType":"initializeOnly",
                                  "@type":"SFFloat"
                                },
                                {
                                  "@name":"outerRadius",
                                  "@accessType":"initializeOnly",
                                  "@type":"SFFloat"
                                },
                                {
                                  "@name":"diskSet3d",
                                  "@accessType":"outputOnly",
                                  "@type":"MFVec3f"
                                },
                                {
                                  "@name":"diskIndexSet3d",
                                  "@accessType":"outputOnly",
                                  "@type":"MFInt32"
                                }
                              ],
                              "IS": {
                                  "connect": [
                                    {
                                      "@nodeField":"innerRadius",
                                      "@protoField":"innerRadius"
                                    },
                                    {
                                      "@nodeField":"outerRadius",
                                      "@protoField":"outerRadius"
                                    }
                                  ]
                              },
                              "#sourceText":[
"ecmascript:",
"",
"function initialize()",
"{",
"   if (innerRadius < 0)",
"   {",
"      Browser.print ('[Disk2D] Warning:  invalid value, innerRadius=' + value + ' must instead be >= 0');",
"   }",
"",
"   if (outerRadius < 0)",
"   {",
"      Browser.print ('[Disk2D] Warning:  invalid value, outerRadius=' + value + ' must instead be >= 0');",
"   }",
"",
"",
"",
"   numOfPoints    = 100.0;",
"   diskSet3d      = new MFVec3f();",
"   diskIndexSet3d = new MFInt32();",
"   differAng = 2 * Math.PI/numOfPoints;",
"",
"",
"   for ( i=0 ; i<2*numOfPoints ; i++)",
"   {",
"        if ( i<numOfPoints)",
"\t     diskSet3d[i] = new SFVec3f ( innerRadius*Math.cos(i*differAng), innerRadius*Math.sin(i*differAng), 0.0 );",
"        else",
"             diskSet3d[i] = new SFVec3f ( outerRadius*Math.cos((i-numOfPoints-1.0)*differAng), outerRadius*Math.sin((i-numOfPoints-1.0)*differAng), 0.0 );",
"   }",
"",
"",
"   k=0;",
"   for (i=0 ; i<numOfPoints ; i++)",
"   {",
"        diskIndexSet3d[k]   = i;",
"        diskIndexSet3d[k+1] = i + numOfPoints;",
"        diskIndexSet3d[k+2] = i + numOfPoints + 1;",
"        diskIndexSet3d[k+3]   = i;",
"        diskIndexSet3d[k+4] = -1;",
"        diskIndexSet3d[k+5] = i+1;",
"        diskIndexSet3d[k+6] = i ;",
"        diskIndexSet3d[k+7] = i + numOfPoints +1;",
"        diskIndexSet3d[k+8] = i +1;",
"        diskIndexSet3d[k+9] = -1;",
"",
"        if (i == numOfPoints-1)",
"        {",
"        diskIndexSet3d[k]   = i;",
"        diskIndexSet3d[k+1] = i + numOfPoints;",
"        diskIndexSet3d[k+2] = numOfPoints;",
"        diskIndexSet3d[k+3]   = i;",
"        diskIndexSet3d[k+4] = -1;",
"        diskIndexSet3d[k+5] = 0;",
"        diskIndexSet3d[k+6] = i;",
"        diskIndexSet3d[k+7] = numOfPoints;",
"        diskIndexSet3d[k+8] = 0;",
"        diskIndexSet3d[k+9] = -1;",
"        }",
"   k=k+10;",
"   }",
"",
"} // initialize"
]
                            }
                          },
                          { "ROUTE":
                            {
                              "@fromField":"diskSet3d",
                              "@fromNode":"Disk2dToFaceSet3d",
                              "@toField":"point",
                              "@toNode":"Disk3DPoints"
                            }
                          },
                          { "ROUTE":
                            {
                              "@fromField":"diskIndexSet3d",
                              "@fromNode":"Disk2dToFaceSet3d",
                              "@toField":"set_coordIndex",
                              "@toNode":"DiskPointsIndex"
                            }
                          }
                        ]
                      }
                    }
                  ]
              }
            }
          },
          {
            "#comment":"===================="
          },
          { "ProtoDeclare":
            {
              "@name":"Polyline2D",
              "ProtoInterface": {
                  "field": [
                    {
                      "@name":"lineSegments",
                      "@accessType":"initializeOnly",
                      "@type":"MFVec2f"
                    },
                    {
                      "@name":"solid",
                      "@accessType":"initializeOnly",
                      "@type":"SFBool",
                      "@value":false
                    },
                    {
                      "@name":"metadata",
                      "@accessType":"inputOutput",
                      "@appinfo":"Metadata node only",
                      "@type":"SFNode"
                    }
                  ]
              },
              "ProtoBody": {
                  "-children":[
                    { "IndexedLineSet":
                      {
                        "@DEF":"LinesSegmentsIndexPoints",
                        "-coord":
                          { "Coordinate":
                            {
                              "@DEF":"LineSegments3DPoints"
                            }
                          }
                      }
                    },
                    { "Group":
                      {
                        "-children":[
                          { "Script":
                            {
                              "@DEF":"LineSegments2dToLineSet3d",
                              "field": [
                                {
                                  "@name":"lineSegments",
                                  "@accessType":"initializeOnly",
                                  "@type":"MFVec2f"
                                },
                                {
                                  "@name":"lineSegments3D",
                                  "@accessType":"outputOnly",
                                  "@type":"MFVec3f"
                                },
                                {
                                  "@name":"lineSegmentsIndex",
                                  "@accessType":"outputOnly",
                                  "@type":"MFInt32"
                                }
                              ],
                              "IS": {
                                  "connect": [
                                    {
                                      "@nodeField":"lineSegments",
                                      "@protoField":"lineSegments"
                                    }
                                  ]
                              },
                              "#sourceText":[
"ecmascript:",
"",
"function initialize()",
"{",
"   for ( i=0 ; i<lineSegments.length ; i++)",
"   {",
"          lineSegments3D[i] = new SFVec3f ( lineSegments[i].x, lineSegments[i].y, 0.0 );",
"          lineSegmentsIndex[i] = i;",
"   }",
"",
"     lineSegmentsIndex[i] = -1;",
"",
"} // initialize"
]
                            }
                          },
                          { "ROUTE":
                            {
                              "@fromField":"lineSegments3D",
                              "@fromNode":"LineSegments2dToLineSet3d",
                              "@toField":"point",
                              "@toNode":"LineSegments3DPoints"
                            }
                          },
                          { "ROUTE":
                            {
                              "@fromField":"lineSegmentsIndex",
                              "@fromNode":"LineSegments2dToLineSet3d",
                              "@toField":"set_coordIndex",
                              "@toNode":"LinesSegmentsIndexPoints"
                            }
                          }
                        ]
                      }
                    }
                  ]
              }
            }
          },
          {
            "#comment":"===================="
          },
          { "ProtoDeclare":
            {
              "@name":"Polypoint2D",
              "ProtoInterface": {
                  "field": [
                    {
                      "@name":"point",
                      "@accessType":"initializeOnly",
                      "@type":"MFVec2f"
                    },
                    {
                      "@name":"metadata",
                      "@accessType":"inputOutput",
                      "@appinfo":"Metadata node only",
                      "@type":"SFNode",
                      "-children":[
                        {
                          "#comment":"default NULL"
                        }
                      ]
                    }
                  ]
              },
              "ProtoBody": {
                  "-children":[
                    { "PointSet":
                      {
                        "-coord":
                          { "Coordinate":
                            {
                              "@DEF":"Points3D"
                            }
                          }
                      }
                    },
                    { "Group":
                      {
                        "-children":[
                          { "Script":
                            {
                              "@DEF":"Points2dToLineSet3d",
                              "field": [
                                {
                                  "@name":"point",
                                  "@accessType":"initializeOnly",
                                  "@type":"MFVec2f"
                                },
                                {
                                  "@name":"points3D",
                                  "@accessType":"outputOnly",
                                  "@type":"MFVec3f"
                                }
                              ],
                              "IS": {
                                  "connect": [
                                    {
                                      "@nodeField":"point",
                                      "@protoField":"point"
                                    }
                                  ]
                              },
                              "#sourceText":[
"ecmascript:",
"",
"function initialize()",
"{",
"",
"   for ( i=0 ; i<point.length ; i++)",
"   {",
"          points3D[i] = new SFVec3f ( point[i].x, point[i].y, 0.0 );",
"   }",
"",
"} // initialize"
]
                            }
                          },
                          { "ROUTE":
                            {
                              "@fromField":"points3D",
                              "@fromNode":"Points2dToLineSet3d",
                              "@toField":"point",
                              "@toNode":"Points3D"
                            }
                          }
                        ]
                      }
                    }
                  ]
              }
            }
          },
          {
            "#comment":"===================="
          },
          { "ProtoDeclare":
            {
              "@name":"Rectangle2D",
              "@appinfo":"Default filled matching default FillProperties filled=true.",
              "ProtoInterface": {
                  "field": [
                    {
                      "@name":"size",
                      "@accessType":"initializeOnly",
                      "@type":"SFVec2f",
                      "@value":[2,2]
                    },
                    {
                      "@name":"solid",
                      "@accessType":"initializeOnly",
                      "@type":"SFBool",
                      "@value":false
                    },
                    {
                      "@name":"metadata",
                      "@accessType":"inputOutput",
                      "@appinfo":"Metadata node only",
                      "@type":"SFNode",
                      "-children":[
                        {
                          "#comment":"default NULL"
                        }
                      ]
                    }
                  ]
              },
              "ProtoBody": {
                  "-children":[
                    { "IndexedFaceSet":
                      {
                        "@coordIndex":[0,1,2,0,-1,2,3,0,2],
                        "@solid":false,
                        "-coord":
                          { "Coordinate":
                            {
                              "@DEF":"RectanglePoints"
                            }
                          }
                      }
                    },
                    { "Group":
                      {
                        "-children":[
                          { "Script":
                            {
                              "@DEF":"Rect2dToFaceSet3d",
                              "field": [
                                {
                                  "@name":"size",
                                  "@accessType":"initializeOnly",
                                  "@type":"SFVec2f"
                                },
                                {
                                  "@name":"pointSet3d",
                                  "@accessType":"outputOnly",
                                  "@type":"MFVec3f"
                                },
                                {
                                  "@name":"fillNoFillSelection",
                                  "@accessType":"outputOnly",
                                  "@type":"SFInt32"
                                }
                              ],
                              "IS": {
                                  "connect": [
                                    {
                                      "@nodeField":"size",
                                      "@protoField":"size"
                                    }
                                  ]
                              },
                              "#sourceText":[
"ecmascript:",
"",
"function initialize()",
"{",
"   xDim = size[0];",
"   yDim = size[1];",
"",
"   pointSet3d[0] = new SFVec3f ( (-xDim / 2.0), (yDim / 2.0), 0.0 );",
"   pointSet3d[1] = new SFVec3f ( (-xDim / 2.0), (-yDim / 2.0), 0.0 );",
"   pointSet3d[2] = new SFVec3f ( (xDim / 2.0), (-yDim / 2.0), 0.0 );",
"   pointSet3d[3] = new SFVec3f ( (xDim / 2.0), (yDim / 2.0), 0.0 );",
"",
"} // initialize"
]
                            }
                          },
                          { "ROUTE":
                            {
                              "@fromField":"pointSet3d",
                              "@fromNode":"Rect2dToFaceSet3d",
                              "@toField":"point",
                              "@toNode":"RectanglePoints"
                            }
                          }
                        ]
                      }
                    }
                  ]
              }
            }
          },
          {
            "#comment":"Rectangle2DUnfilled also provided since FillProperties not available in VRML 97"
          },
          { "ProtoDeclare":
            {
              "@name":"Rectangle2DUnfilled",
              "ProtoInterface": {
                  "field": [
                    {
                      "@name":"size",
                      "@accessType":"initializeOnly",
                      "@type":"SFVec2f",
                      "@value":[2,2]
                    },
                    {
                      "@name":"solid",
                      "@accessType":"initializeOnly",
                      "@type":"SFBool",
                      "@value":false
                    },
                    {
                      "@name":"metadata",
                      "@accessType":"inputOutput",
                      "@appinfo":"Metadata node only",
                      "@type":"SFNode",
                      "-children":[
                        {
                          "#comment":"default NULL"
                        }
                      ]
                    }
                  ]
              },
              "ProtoBody": {
                  "-children":[
                    { "IndexedLineSet":
                      {
                        "@coordIndex":[0,1,2,3,0],
                        "-coord":
                          { "Coordinate":
                            {
                              "@DEF":"RectanglePointsLine"
                            }
                          }
                      }
                    },
                    { "Group":
                      {
                        "-children":[
                          { "Script":
                            {
                              "@DEF":"Rect2dToLineSet3d",
                              "field": [
                                {
                                  "@name":"size",
                                  "@accessType":"initializeOnly",
                                  "@type":"SFVec2f"
                                },
                                {
                                  "@name":"pointSet3d",
                                  "@accessType":"outputOnly",
                                  "@type":"MFVec3f"
                                },
                                {
                                  "@name":"fillNoFillSelection",
                                  "@accessType":"outputOnly",
                                  "@type":"SFInt32"
                                }
                              ],
                              "IS": {
                                  "connect": [
                                    {
                                      "@nodeField":"size",
                                      "@protoField":"size"
                                    }
                                  ]
                              },
                              "#sourceText":[
"ecmascript:",
"",
"function initialize()",
"{",
"   xDim = size[0];",
"   yDim = size[1];",
"",
"   pointSet3d[0] = new SFVec3f ( (-xDim / 2.0), (yDim / 2.0), 0.0 );",
"   pointSet3d[1] = new SFVec3f ( (-xDim / 2.0), (-yDim / 2.0), 0.0 );",
"   pointSet3d[2] = new SFVec3f ( (xDim / 2.0), (-yDim / 2.0), 0.0 );",
"   pointSet3d[3] = new SFVec3f ( (xDim / 2.0), (yDim / 2.0), 0.0 );",
"",
"} // initialize"
]
                            }
                          },
                          { "ROUTE":
                            {
                              "@fromField":"pointSet3d",
                              "@fromNode":"Rect2dToLineSet3d",
                              "@toField":"point",
                              "@toNode":"RectanglePointsLine"
                            }
                          }
                        ]
                      }
                    }
                  ]
              }
            }
          },
          {
            "#comment":"===================="
          },
          { "ProtoDeclare":
            {
              "@name":"TriangleSet2D",
              "ProtoInterface": {
                  "field": [
                    {
                      "@name":"vertices",
                      "@accessType":"initializeOnly",
                      "@type":"MFVec2f"
                    },
                    {
                      "@name":"solid",
                      "@accessType":"initializeOnly",
                      "@type":"SFBool",
                      "@value":false
                    },
                    {
                      "@name":"metadata",
                      "@accessType":"inputOutput",
                      "@appinfo":"Metadata node only",
                      "@type":"SFNode",
                      "-children":[
                        {
                          "#comment":"default NULL"
                        }
                      ]
                    }
                  ]
              },
              "ProtoBody": {
                  "-children":[
                    { "IndexedFaceSet":
                      {
                        "@DEF":"TriangleSetIndexPoints",
                        "@solid":false,
                        "-coord":
                          { "Coordinate":
                            {
                              "@DEF":"TriangleSet3DPoints"
                            }
                          }
                      }
                    },
                    { "Group":
                      {
                        "-children":[
                          { "Script":
                            {
                              "@DEF":"TriangleSet2dToLineSet3d",
                              "field": [
                                {
                                  "@name":"vertices",
                                  "@accessType":"initializeOnly",
                                  "@type":"MFVec2f"
                                },
                                {
                                  "@name":"triangleSet3D",
                                  "@accessType":"outputOnly",
                                  "@type":"MFVec3f"
                                },
                                {
                                  "@name":"triangleSetIndex",
                                  "@accessType":"outputOnly",
                                  "@type":"MFInt32"
                                }
                              ],
                              "IS": {
                                  "connect": [
                                    {
                                      "@nodeField":"vertices",
                                      "@protoField":"vertices"
                                    }
                                  ]
                              },
                              "#sourceText":[
"ecmascript:",
"",
"function initialize()",
"{",
"   numbOfTriangles = Math.floor(vertices.length/3);",
"",
"   for ( i=0 ; i<3*numbOfTriangles ; i++)",
"   {",
"          triangleSet3D[i] = new SFVec3f ( vertices[i].x, vertices[i].y, 0.0 );",
"   }",
"",
"   k=0;",
"   for (i=0; i<numbOfTriangles; i++)",
"   {",
"        triangleSetIndex[k] = k - i ;",
"        triangleSetIndex[k+1] = k - i + 1 ;",
"        triangleSetIndex[k+2] = k - i + 2 ;",
"        triangleSetIndex[k+3] = -1 ;",
"",
"        k=k+4;",
"    }",
"",
"} // initialize"
]
                            }
                          },
                          { "ROUTE":
                            {
                              "@fromField":"triangleSet3D",
                              "@fromNode":"TriangleSet2dToLineSet3d",
                              "@toField":"point",
                              "@toNode":"TriangleSet3DPoints"
                            }
                          },
                          { "ROUTE":
                            {
                              "@fromField":"triangleSetIndex",
                              "@fromNode":"TriangleSet2dToLineSet3d",
                              "@toField":"set_coordIndex",
                              "@toNode":"TriangleSetIndexPoints"
                            }
                          }
                        ]
                      }
                    }
                  ]
              }
            }
          },
          {
            "#comment":"===================="
          },
          { "Background":
            {
              "@groundColor":[0.25,0.25,0.25],
              "@skyColor":[0.25,0.25,0.25]
            }
          },
          { "Anchor":
            {
              "@DEF":"LinkToExamples",
              "@description":"link to examples",
              "@url":["Geometry2dComponentExternProtos.x3d","http://www.web3d.org/x3d/content/examples/Basic/development/Geometry2dComponentExternProtos.x3d","Geometry2dComponentExamples.wrl","http://www.web3d.org/x3d/content/examples/Basic/development/Geometry2dComponentExamples.wrl"],
              "-children":[
                { "Shape":
                  {
                    "-appearance":
                      { "Appearance":
                        {
                          "-material":
                            { "Material":
                              {
                                "@diffuseColor":[0.8,0.6,0.2]
                              }
                            }
                        }
                      },
                    "-geometry":
                      { "Text":
                        {
                          "@string":["Geometry2dComponentPrototypes","is a developmental file.","Click this text to view","Geometry2dComponentExamples"],
                          "-fontStyle":
                            { "FontStyle":
                              {
                                "@justify":["MIDDLE","MIDDLE"],
                                "@size":0.75
                              }
                            }
                        }
                      }
                  }
                }
              ]
            }
          }
        ]
    }
  }
}