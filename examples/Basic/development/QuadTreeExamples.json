{ "X3D": {
    "encoding":"UTF-8",
    "@profile":"Immersive",
    "@version":"3.0",
    "@xsd:noNamespaceSchemaLocation":"http://www.web3d.org/specifications/x3d-3.0.xsd",
    "JSON schema":"http://www.web3d.org/specifications/x3d-3.3-JSONSchema.json",
    "head": {
        "meta": [
          {
            "@name":"title",
            "@content":"QuadTreeExamples.x3d"
          },
          {
            "@name":"creator",
            "@content":"Don Brutzman"
          },
          {
            "@name":"created",
            "@content":"26 June 2000"
          },
          {
            "@name":"modified",
            "@content":"27 February 2016"
          },
          {
            "@name":"description",
            "@content":"Show four ways of solving the QuadTree problem using native XML tags, PROTOs, IDREF/USE and MFNode children compatibly - view XML source to see DTD internal-subset declarations."
          },
          {
            "@name":"error",
            "@content":"Test to demonstrate DOCTYPE extensibility, this X3D scene not valid and does not render."
          },
          {
            "@name":"warning",
            "@content":"You must view full source of the DTD declarations (QuadTreeExamples.x3d.txt) to fully understand validation techniques in this file."
          },
          {
            "@name":"reference",
            "@content":"QuadTreeExamplesExplanation.html"
          },
          {
            "@name":"reference",
            "@content":"QuadTreeExamples.x3d.txt"
          },
          {
            "@name":"reference",
            "@content":"QuadTreeExamples.png"
          },
          {
            "@name":"identifier",
            "@content":"http://www.web3d.org/x3d/content/examples/development/QuadTreeExamples.x3d"
          },
          {
            "@name":"generator",
            "@content":"X3D-Edit 3.1, http://www.web3d.org/x3d/content/README.X3D-Edit.html"
          },
          {
            "@name":"license",
            "@content":"../license.html"
          },
          {
            "@name":"translated",
            "@content":"19 March 2017"
          },
          {
            "@name":"generator",
            "@content":"X3dToJson.xslt, http://www.web3d.org/x3d/stylesheets/X3dToJson.html"
          },
          {
            "@name":"warning",
            "@content":"An experimental version of X3D JSON encoding is used for this scene.  Status online at http://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
          }
        ]
    },
    "Scene": {
        "-children":[
          {
            "#comment":"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -"
          },
          {
            "#comment":"Example solution approach #1"
          },
          {
            "#comment":"Note that PROTO declarations are also provided for compatible backwards translation to VRML 97 encoding. They are not necessary for independent X3D use of the QuadTree examples."
          },
          { "ProtoDeclare":
            {
              "@name":"QuadTree-USEchildren",
              "ProtoInterface": {
                  "field": [
                    {
                      "@name":"upperLeftDEFName",
                      "@accessType":"inputOutput",
                      "@type":"MFNode"
                    },
                    {
                      "@name":"upperRightDEFName",
                      "@accessType":"inputOutput",
                      "@type":"MFNode"
                    },
                    {
                      "@name":"lowerLeftDEFName",
                      "@accessType":"inputOutput",
                      "@type":"MFNode"
                    },
                    {
                      "@name":"lowerRightDEFName",
                      "@accessType":"inputOutput",
                      "@type":"MFNode"
                    },
                    {
                      "@name":"children",
                      "@accessType":"inputOutput",
                      "@type":"MFNode"
                    }
                  ],
                  "-children":[
                    {
                      "#comment":"children field must be declared for any PROTOs or native-tag nodes with children"
                    }
                  ]
              },
              "ProtoBody": {
                  "-children":[
                    {
                      "#comment":"VRML 97 specification paragraph 4.8.3, PROTO definition semantics: \"A prototype definition consists of one or more nodes.\" PROTO body follows."
                    },
                    { "Group":
                      {
                        "-children":[
                          { "Group":
                            {
                              "@DEF":"GroupA",
                              "IS": {
                                  "connect": [
                                    {
                                      "@nodeField":"children",
                                      "@protoField":"upperLeftDEFName"
                                    }
                                  ]
                              }
                            }
                          },
                          { "Group":
                            {
                              "@DEF":"GroupB",
                              "IS": {
                                  "connect": [
                                    {
                                      "@nodeField":"children",
                                      "@protoField":"upperRightDEFName"
                                    }
                                  ]
                              }
                            }
                          },
                          { "Group":
                            {
                              "@DEF":"GroupC",
                              "IS": {
                                  "connect": [
                                    {
                                      "@nodeField":"children",
                                      "@protoField":"lowerLeftDEFName"
                                    }
                                  ]
                              }
                            }
                          },
                          { "Group":
                            {
                              "@DEF":"GroupD",
                              "IS": {
                                  "connect": [
                                    {
                                      "@nodeField":"children",
                                      "@protoField":"lowerRightDEFName"
                                    }
                                  ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
              }
            }
          },
          {
            "#comment":"Example solution approach #3"
          },
          { "ProtoDeclare":
            {
              "@name":"QuadTree-TagChildren",
              "ProtoInterface": {
                  "field": [
                    {
                      "@name":"upperLeftNode",
                      "@accessType":"inputOutput",
                      "@type":"MFNode",
                      "-children":[
                        {
                          "#comment":"no initialization node"
                        }
                      ]
                    },
                    {
                      "@name":"upperRightNode",
                      "@accessType":"inputOutput",
                      "@type":"MFNode",
                      "-children":[
                        {
                          "#comment":"no initialization node"
                        }
                      ]
                    },
                    {
                      "@name":"lowerLeftNode",
                      "@accessType":"inputOutput",
                      "@type":"MFNode",
                      "-children":[
                        {
                          "#comment":"no initialization node"
                        }
                      ]
                    },
                    {
                      "@name":"lowerRightNode",
                      "@accessType":"inputOutput",
                      "@type":"MFNode",
                      "-children":[
                        {
                          "#comment":"no initialization node"
                        }
                      ]
                    },
                    {
                      "@name":"children",
                      "@accessType":"inputOutput",
                      "@type":"MFNode"
                    }
                  ]
              },
              "ProtoBody": {
                  "-children":[
                    {
                      "#comment":"PROTO body follows."
                    },
                    { "Group":
                      {
                        "-children":[
                          { "Group":
                            {
                              "@DEF":"GroupE",
                              "IS": {
                                  "connect": [
                                    {
                                      "@nodeField":"children",
                                      "@protoField":"upperLeftNode"
                                    }
                                  ]
                              }
                            }
                          },
                          { "Group":
                            {
                              "@DEF":"GroupF",
                              "IS": {
                                  "connect": [
                                    {
                                      "@nodeField":"children",
                                      "@protoField":"upperRightNode"
                                    }
                                  ]
                              }
                            }
                          },
                          { "Group":
                            {
                              "@DEF":"GroupG",
                              "IS": {
                                  "connect": [
                                    {
                                      "@nodeField":"children",
                                      "@protoField":"lowerLeftNode"
                                    }
                                  ]
                              }
                            }
                          },
                          { "Group":
                            {
                              "@DEF":"GroupH",
                              "IS": {
                                  "connect": [
                                    {
                                      "@nodeField":"children",
                                      "@protoField":"lowerRightNode"
                                    }
                                  ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
              }
            }
          },
          {
            "#comment":"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -"
          },
          { "Group":
            {
              "-children":[
                { "Viewpoint":
                  {
                    "@description":"View QuadTree examples",
                    "@position":[0,0,30]
                  }
                },
                { "Transform":
                  {
                    "@DEF":"Example_1",
                    "@translation":[0,6,0],
                    "-children":[
                      { "ProtoInstance":
                        {
                          "@name":"QuadTree-USEchildren",
                          "fieldValue": [
                            {
                              "@name":"children",
                              "-children":[
                                { "Group":
                                  {
                                    "-children":[
                                      { "Transform":
                                        {
                                          "@DEF":"UPPER_LEFT",
                                          "@translation":[4,0,4],
                                          "-children":[
                                            { "Shape":
                                              {
                                                "-appearance":
                                                  { "Appearance":
                                                    {
                                                      "@DEF":"RED",
                                                      "-material":
                                                        { "Material":
                                                          {
                                                            "@diffuseColor":[1,0,0]
                                                          }
                                                        }
                                                    }
                                                  },
                                                "-geometry":
                                                  { "Box":
                                                    {
                                                    }
                                                  }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      { "Transform":
                                        {
                                          "@DEF":"UPPER_RIGHT",
                                          "@translation":[3,0,-3],
                                          "-children":[
                                            { "Shape":
                                              {
                                                "-appearance":
                                                  { "Appearance":
                                                    {
                                                      "@DEF":"GREEN",
                                                      "-material":
                                                        { "Material":
                                                          {
                                                            "@diffuseColor":[0,1,0]
                                                          }
                                                        }
                                                    }
                                                  },
                                                "-geometry":
                                                  { "Sphere":
                                                    {
                                                    }
                                                  }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      { "Transform":
                                        {
                                          "@DEF":"LOWER_LEFT",
                                          "@translation":[-3,0,-3],
                                          "-children":[
                                            { "Shape":
                                              {
                                                "-appearance":
                                                  { "Appearance":
                                                    {
                                                      "@DEF":"BLUE",
                                                      "-material":
                                                        { "Material":
                                                          {
                                                            "@diffuseColor":[0.2,0.2,1]
                                                          }
                                                        }
                                                    }
                                                  },
                                                "-geometry":
                                                  { "Cylinder":
                                                    {
                                                    }
                                                  }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      { "Transform":
                                        {
                                          "@DEF":"LOWER_RIGHT",
                                          "@translation":[-6,0,4],
                                          "-children":[
                                            { "Shape":
                                              {
                                                "-appearance":
                                                  { "Appearance":
                                                    {
                                                      "@DEF":"WHITE",
                                                      "-material":
                                                        { "Material":
                                                          {
                                                            "@diffuseColor":[1,1,1]
                                                          }
                                                        }
                                                    }
                                                  },
                                                "-geometry":
                                                  { "Text":
                                                    {
                                                      "@string":["QuadTree-USEchildren","ProtoInstance"]
                                                    }
                                                  }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            {
                              "@name":"upperLeftDEFName",
                              "-children":[
                                { "Transform":
                                  {
                                    "@USE":"UPPER_LEFT"
                                  }
                                }
                              ]
                            },
                            {
                              "@name":"upperRightDEFName",
                              "-children":[
                                { "Transform":
                                  {
                                    "@USE":"UPPER_RIGHT"
                                  }
                                }
                              ]
                            },
                            {
                              "@name":"lowerLeftDEFName",
                              "-children":[
                                { "Transform":
                                  {
                                    "@USE":"LOWER_LEFT"
                                  }
                                }
                              ]
                            },
                            {
                              "@name":"lowerRightDEFName",
                              "-children":[
                                { "Transform":
                                  {
                                    "@USE":"LOWER_RIGHT"
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                { "Transform":
                  {
                    "@DEF":"Example_2",
                    "@translation":[0,2,0],
                    "-IllegalChildNodeFieldNameNotFound":[
                      { "QuadTree-USEchildren":
                        {
                          "@nodeType":"Group",
                          "fieldValue": [
                            {
                              "@name":"children",
                              "-children":[
                                {
                                  "#comment":"children which follow are locally convenient and referenced via IDREF/USE"
                                },
                                { "Transform":
                                  {
                                    "@DEF":"LOWER_RIGHT_EXAMPLE_2",
                                    "@translation":[-6,0,4],
                                    "-children":[
                                      { "Shape":
                                        {
                                          "-geometry":
                                            { "Text":
                                              {
                                                "@string":["QuadTree-USEchildren","Native tags"]
                                              }
                                            },
                                          "-appearance":
                                            { "Appearance":
                                              {
                                                "@USE":"WHITE"
                                              }
                                            }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            {
                              "@name":"upperLeftDEFName",
                              "-children":[
                                { "Transform":
                                  {
                                    "@USE":"UPPER_LEFT"
                                  }
                                }
                              ]
                            },
                            {
                              "@name":"upperRightDEFName",
                              "-children":[
                                { "Transform":
                                  {
                                    "@USE":"UPPER_RIGHT"
                                  }
                                }
                              ]
                            },
                            {
                              "@name":"lowerLeftDEFName",
                              "-children":[
                                { "Transform":
                                  {
                                    "@USE":"LOWER_LEFT"
                                  }
                                }
                              ]
                            },
                            {
                              "@name":"lowerRightDEFName",
                              "-children":[
                                { "Transform":
                                  {
                                    "@USE":"LOWER_RIGHT_EXAMPLE_2"
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                { "Transform":
                  {
                    "@DEF":"Example_3",
                    "@translation":[0,-2,0],
                    "-children":[
                      { "ProtoInstance":
                        {
                          "@name":"QuadTree-TagChildren",
                          "fieldValue": [
                            {
                              "@name":"upperLeftNode",
                              "-children":[
                                { "Transform":
                                  {
                                    "@USE":"UPPER_LEFT"
                                  }
                                }
                              ]
                            },
                            {
                              "@name":"upperRightNode",
                              "-children":[
                                { "Transform":
                                  {
                                    "@USE":"UPPER_RIGHT"
                                  }
                                }
                              ]
                            },
                            {
                              "@name":"lowerLeftNode",
                              "-children":[
                                { "Transform":
                                  {
                                    "@USE":"LOWER_LEFT"
                                  }
                                }
                              ]
                            },
                            {
                              "@name":"lowerRightNode",
                              "-children":[
                                { "Transform":
                                  {
                                    "@translation":[-6,0,4],
                                    "-children":[
                                      { "Shape":
                                        {
                                          "-geometry":
                                            { "Text":
                                              {
                                                "@string":["QuadTree-TagChildren","ProtoInstance"]
                                              }
                                            },
                                          "-appearance":
                                            { "Appearance":
                                              {
                                                "@USE":"WHITE"
                                              }
                                            }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                { "Transform":
                  {
                    "@DEF":"Example_4",
                    "@translation":[0,-6,0],
                    "-IllegalChildNodeFieldNameNotFound":[
                      { "QuadTree-TagChildren":
                        {
                          "@nodeType":"Group",
                          "fieldValue": [
                            {
                              "@name":"upperLeftNode",
                              "-children":[
                                { "Transform":
                                  {
                                    "@USE":"UPPER_LEFT"
                                  }
                                }
                              ]
                            },
                            {
                              "@name":"upperRightNode",
                              "-children":[
                                { "Transform":
                                  {
                                    "@USE":"UPPER_RIGHT"
                                  }
                                }
                              ]
                            },
                            {
                              "@name":"lowerLeftNode",
                              "-children":[
                                { "Transform":
                                  {
                                    "@USE":"LOWER_LEFT"
                                  }
                                }
                              ]
                            },
                            {
                              "@name":"lowerRightNode",
                              "-children":[
                                { "Transform":
                                  {
                                    "@translation":[-6,0,4],
                                    "-children":[
                                      { "Shape":
                                        {
                                          "-geometry":
                                            { "Text":
                                              {
                                                "@string":["QuadTree-TagChildren","Native tags"]
                                              }
                                            },
                                          "-appearance":
                                            { "Appearance":
                                              {
                                                "@USE":"WHITE"
                                              }
                                            }
                                        }
                                      }
                                    ]
                                  }
                                },
                                { "WorldInfo":
                                  {
                                    "@info":["this WorldInfo is here to demonstrate that the example is type MFNode"]
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "#comment":"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -"
          }
        ]
    }
  }
}